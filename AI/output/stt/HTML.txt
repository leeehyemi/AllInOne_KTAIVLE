00:00 ~ 00:26 -  안녕하세요 안녕하세요. 웹프로그래밍 강의입니다.
00:26 ~ 00:29 -  이번 시간에는 HTML에 대해서
00:30 ~ 00:33 -  살펴보도록 하겠습니다
00:37 ~ 00:40 -  매번 중복되는 내용이니깐요 이거 하시고요
00:40 ~ 00:47 -  보시고요 그 다음에 콜렙 들어가셔서 보시면 되겠습니다
00:48 ~ 01:00 -  자 강의 개요인데요. HTML에 관해서는 굉장히 많은, HTML 뿐만이 아니고 웹 프로그래밍에 대해서는 굉장히 많은
01:00 ~ 01:09 -  사람들이 관심을 가지고 있고 많이 공부하다 보니까 굉장히 그 뛰어나신 훌륭하신 분들이 유튜브 라든지 뭐 책이 라든지 사이트 뭐
01:09 ~ 01:19 -  블록 이런 것들을 굉장히 잘 만들어 놓으신 분들이 많습니다 그래서 어 만약에 제 강의가 뭔가 좀 부족하고 뭔가
01:19 ~ 01:22 -  어 잘 모르겠다다고 하셨을 때는
01:22 ~ 01:25 -  다양한 자료들을 찾아보시면
01:25 ~ 01:30 -  굉장히 또 좋은 도움이 될 거라고 생각이 됩니다
01:30 ~ 01:38 -  그 중에서 제가 좀 이런 뭔가 웹 기술이 라든지 이런거를 좀 공부를 할 때
01:38 ~ 01:49 -  어 좀 자주 참고하는 사이트 중에 하나가 이 w3 스쿨즈 라고 하는 w3스쿨즈 닷컴 이라고 하는 이 사이트입니다
01:49 ~ 01:52 -  아 물론 여기도 저랑 아무 관련 없고요
01:52 ~ 01:55 -  여기 여러분들이 한번 접속할 때마다
01:55 ~ 01:57 -  저한테 돈 들어오는 거 아니니깐요
01:57 ~ 02:00 -  만약에 제가 그런 게 있다라고 그러면
02:00 ~ 02:04 -  여러분들한테 말씀드릴 텐데 전혀 그런 거 없습니다.
02:04 ~ 02:08 -  자, 그래서 어쨌든 이 w3schools.com이라고 하는 곳이
02:08 ~ 02:13 -  굉장히 좀 간략하면서도 좀 좋은 내용으로 되어 있는 것 같아요.
02:13 ~ 02:16 -  그래서 여러 가지, 굉장히 많은 것을 다루고 있는데
02:16 ~ 02:23 -  한번 좀 들어가셔서 여러분들이 관심 있는 것이 있는지 찾아보셔서 그런 것 좀 공부해 보시는 것도 좋을 거라고 생각합니다.
02:23 ~ 02:30 -  영어로 되어 있는데 굉장히 영어가 이렇게 간결하게 되어 있기 때문에
02:30 ~ 02:35 -  때문에 굉장히 좀 뭐 보기에 어렵지 않으실 거라고 생각이 되고 만약에 좀
02:35 ~ 02:40 -  어렵다 그러면 번역 요즘에 되죠 그래서 번역 돌려서 보시면 그렇게 크게
02:40 ~ 02:45 -  어렵지 않을 거라고 생각이 됩니다 그래서 특별하게 뭐 굉장히 많은 그런
02:45 ~ 02:52 -  자원들이 있지만 특별하게 이 W3스쿨즈는 굉장히 기본이 되니까 추천을 드리도록 하고요.
02:52 ~ 03:00 -  그 다음에 이번 강의에서 이번 시간에 제가 말씀드리려고 하는 것은 HTML에 대한 개요입니다.
03:00 ~ 03:07 -  그래서 앞으로 이제 계속 우리가 HTML을 어떻게 프로그래밍 하는지 배울 거기 때문에
03:07 ~ 03:11 -  자세한 내용들은 그 뒤에서 다루게 될 거고요.
03:12 ~ 03:20 -  여기서는 좀 전반적인 내용에 대해서 우리가 오늘 한번 생각해 보는 그런 시간을 가지려고 합니다.
03:24 ~ 03:28 -  HTML이라고 하는 것도 우리가 첫 번째 시간인가요?
03:28 ~ 03:29 -  살펴봤던 그 하이퍼텍스트 마케팅.
03:30 ~ 03:33 -  마크업 랭귀지 라고 하는 거에 랭귀지로 끝나죠.
03:33 ~ 03:38 -  그러니까 이게 언어다 보니까 언어라고 하는 것은 문법을 가지고 있죠.
03:38 ~ 03:42 -  그래서 그 문법에 맞춰서 사용을 해야 된다라는 겁니다.
03:42 ~ 03:46 -  그 얘기는 뭘까요? 우리가 만약에 HTML을 배운다라고 하면
03:46 ~ 03:50 -  그 문법을 배워야 된다라는 얘기가 되겠죠.
03:51 ~ 03:57 -  근데 제가 여태까지 컴퓨터 전공을 하고 나서
03:57 ~ 04:00 -  몇 년인가요? 30년?
04:00 ~ 04:06 -  넘은 것 같은데요. 어쨌든 굉장히 긴 시간 동안
04:06 ~ 04:18 -  그 전에도 물론 중학교 때부터 프로그래밍 하고 그랬었는데 어쨌든 그렇게 많은 시간을 제가 프로그래밍을 하면서 봤던 언어들
04:18 ~ 04:25 -  중에서 이 HTML 이라고 하는 것은 가장 좀 느슨한 언어입니다
04:25 ~ 04:30 -  그러니까 뭐냐면은 조금 틀려도 얘가 잘 보여줘요
04:30 ~ 04:37 -  그러니까 다른 언어는 정말 점을 콤마로 찍었다든지 아니면 하나를 빼먹었다라고 하면
04:37 ~ 04:44 -  한 줄 썼는데 예전 같은 경우에는 한 줄을 잘못 쓰면 에러가 몇십 개 나오고 그랬었거든요 예전에는
04:44 ~ 04:50 -  근데 요즘은 그렇게까지는 안 한 거, 요즘은 잘 찾아주는 편인데
04:50 ~ 04:55 -  어쨌든 HTML이라고 하는 언어는 웹브라우저에서 보게 되는데
04:55 ~ 05:00 -  그냥 뭐 대충 써도 그냥 대충 보여줍니다
05:00 ~ 05:09 -  자 그게 여러분들이 처음에 배우시는 입장에서는 조금 좋을 수도 있겠죠
05:09 ~ 05:13 -  왜냐하면 뭘 자꾸 틀렸다고 예감하면 하기 싫어지잖아요
05:13 ~ 05:19 -  근데 잘한다 잘한다고 보여주고 그러니까 상당히 좋을 것 같기도 한데
05:19 ~ 05:22 -  오히려 좀 독이 될 때도 있습니다.
05:22 ~ 05:30 -  틀린 걸 모르고 지나가는 때가 있게 되고, 그 다음에 앞에서 틀린 것은 그냥 지나갔는데 그것 때문에
05:30 ~ 05:32 -  프로그램에 영향을 받아서 뒤에 제대로 했는데
05:32 ~ 05:37 -  아무리 뒤에 한 것만 아무리 들여다봐도 잘못된 게 없는 그런 게 있을 수 있거든요.
05:38 ~ 05:43 -  그러니까 사실 컴퓨터를 전공하는 사람의 입장에서 보면
05:43 ~ 05:50 -  아주 세세한 것까지 그런 걸 잡아주는 것이 상당히 좀 도움이 된다라는 겁니다.
05:51 ~ 05:55 -  어쨌든 좋은 프로그램을 만드는 데 있어서 굉장히 도움이 많이 된다라는 거죠.
05:55 ~ 05:59 -  그냥 어떨 때는 그냥 슬렁슬렁 넘어갔는데 다른 웹브라우저, 사파리가...
06:00 ~ 06:04 -  우리가 애초에 했었는데 잘 나오는데 사파리에서 했더니 안 나오더라.
06:04 ~ 06:06 -  이러면 굉장히 굴착해지는 거죠.
06:06 ~ 06:13 -  그래서 언어다 보니까 문법에 맞춰 쓰는 연습을 여러분들이 해주셔야 된다는 거죠.
06:13 ~ 06:18 -  그러니까 이렇게 해도 되던데 물론 그렇게 쓰실 수도 있겠지만
06:18 ~ 06:22 -  가능하면 HTML도 일단 문법이 있으니까
06:22 ~ 06:25 -  그거에 맞춰서 쓰시는 것이 좋을 거다라는 거고요.
06:26 ~ 06:30 -  그 다음에 HTML의 어떤
06:30 ~ 06:41 -  기본 구조, 태그, 엘리먼트, 애트리뷰트 등을 계속 앞으로 살펴보도록 하겠습니다.
06:41 ~ 06:51 -  그 다음에 css 하고 자바스크립트와의 관계 이런 것도 여러분들이 조금 공부를 해보는 게 필요하겠죠.
06:54 ~ 06:56 -  그런 거에 대해서도 말씀을 드리고 여기 보니까 태그 엘리먼트 애트리뷰츠 이런 거는 그 뒤쪽에
06:58 ~ 07:00 -  5장인가요? 5장에 가서
07:00 ~ 07:01 -  설명을 드리도록 하겠습니다.
07:05 ~ 07:07 -  HTML, 약자는 이미 설명드렸었죠.
07:08 ~ 07:10 -  1장에서 첫 번째 시간에 말씀드렸었죠.
07:11 ~ 07:13 -  그래서 Hypertext Markup Language
07:13 ~ 07:14 -  그래서 복습을 해보면
07:14 ~ 07:16 -  Hypertext라고 하는 것은
07:16 ~ 07:18 -  뭔가 일반 텍스트보다 뛰어난 것
07:18 ~ 07:19 -  그래서 링크라든지
07:19 ~ 07:22 -  Hyperlink라고 부르는데요.
07:22 ~ 07:26 -  실제로는 앵커, A 태그를 사용하게 되는데
07:26 ~ 07:28 -  어쨌든 다른 문서로 연결한다든지
07:28 ~ 07:30 -  이미지를 쓴다든지 색깔을 입히든
07:30 ~ 07:33 -  이런 것들이 일반 텍스트에서는 할 수 없는데
07:33 ~ 07:35 -  그런 것들을 할 수 있게 해주고
07:35 ~ 07:38 -  마킹한다고 하는 것은 뭔가 이렇게 추가적인 정보를
07:38 ~ 07:42 -  형광펜으로 이렇게 색칠을 한다든지 별표를 한다든지
07:42 ~ 07:43 -  이런 거라고 말씀드렸었죠.
07:43 ~ 07:47 -  그래서 그런 마킹할 수 있는 뭔가 부가적인 정보를
07:47 ~ 07:52 -  추가로 가지고 있을 수 있는 그런 것들이 HTML이 된다는 거죠.
07:52 ~ 08:00 -  그런 부가적인 정보로서 태그라는 것하고 그 다음에 애트리뷰트 이런 것들을
08:00 ~ 08:06 -  실제 데이터가 있더라도 그거를 뭔가 꾸며주는 그런 것들을 갖고 있는 게 있을 수 있다는 거죠.
08:06 ~ 08:16 -  자, 그래서 기본적으로 HTML이라고 하는 것은 웹페이지를 표현하기 위한 그런 언어라고 생각이 되고요.
08:16 ~ 08:21 -  그래서 굉장히 많이 지금 웹페이지를 안 쓰는 곳이 거의 없죠.
08:21 ~ 08:25 -  그래서 굉장히 많이 사용이 되고 있는데요.
08:25 ~ 08:30 -  이렇게 많이 사용되는 이유는 뭘까요?
08:30 ~ 08:32 -  복잡하면 사람들이 많이 사용할까요? 아니겠죠.
08:32 ~ 08:36 -  그래서 배우기 쉽고 사용하기 편하기 때문에
08:36 ~ 08:39 -  무지막지하게 많이 사용이 된다는 거죠.
08:41 ~ 08:42 -  제가 보면 항상 그런 것 같아요.
08:42 ~ 08:46 -  컴퓨터공학 전공에서 보면 지난 시간에도 말씀을 드렸지만
08:46 ~ 08:50 -  쉬운 게 일반적으로 널리 사용이 되는 것 같습니다.
08:51 ~ 08:56 -  그리고 웹브라우저가 텍스트 형식의 HTML을 읽어가지고
08:56 ~ 09:00 -  렌더링 한다 라는 표현을 썼는데요
09:00 ~ 09:05 -  렌더링 한다는 것은 그림을 그려준다 라고 생각하시면 되겠습니다
09:05 ~ 09:07 -  화면에 출력을 한다는 거죠
09:07 ~ 09:12 -  실제로는 텍스트 형태의 그런 파일인데
09:12 ~ 09:19 -  그거를 웹 브라우저가 뭔가 좀 이쁘게 보여준다는 거죠
09:19 ~ 09:24 -  그리고 또 중요한 특징이 W3C에서 표준화한다는 거죠.
09:24 ~ 09:30 -  그래서 이런 표준화하는 기구가 따로 있다는 얘기는 뭐냐면은
09:30 ~ 09:39 -  우리가 마음대로 태그를 원하는 대로 바꿔 가지고 사용할 수가 없다는 얘기죠
09:39 ~ 09:48 -  그래서 아까 말씀드린 대로 좀 느슨하다고 했죠 그래서 html 은 우리가 뭔가를 잘못 써도 태그림을 내 마음대로 적어 써도
09:48 ~ 09:53 -  적어서 사용하더라도 에러가 발생하지 않습니다.
09:53 ~ 10:00 -  대신에 웹 브라우저가 이거를 아까 이렇게 텍스트 파일 형식을 읽어가지고 렌더링해서 화면에 보여준다고
10:00 ~ 10:06 -  그랬는데 웹브라우저가 읽다 보니까 뭐 이건 뭐지 내가 모르는게 있네 하면 무시하게 된다는 거죠
10:06 ~ 10:23 -  다른 언어 같으면 거기서 뭔가 에러를 발생시킬 텐데 물론 이제 에러를 발생시키는 경우가 있기는 있지만 웬만하면 이거를 그냥 웹브라우저가 화면에 보여 주려고 하거든요 그래서 웹브라우저가 인식하지 못해 가지고 원하는 대로 출력이 될 리가 만무하다 라는 거죠.
10:23 ~ 10:25 -  내가 마음대로 태그를 만들어서 쓴다.
10:25 ~ 10:29 -  그러면 웹브라우저가 그거를 당연히 모를 거다 라는 겁니다.
10:30 ~ 10:36 -  자 HTML의 변천사를 한번 보면요
10:36 ~ 10:47 -  초기에는 다른 문서로 어떤 텍스트보다 뛰어난 하이퍼텍스트라고 했죠
10:47 ~ 10:56 -  그래서 하이퍼링크라는 것을 가지고 한 문서에서 다른 문서로 연결하는 그 링크가 누르면 저희 막 연결되잖아요.
10:56 ~ 11:00 -  그런 것처럼 그런 것이 주요 기능이었다는 거죠.
11:00 ~ 11:09 -  그래서 어떤 사전 같은 거 만드는데 아주 적합하다고 그렇게 그 다음에 지식을 전달할 때 뭐를 막 읽고 있었는데 뭘 몰라요.
11:09 ~ 11:17 -  그러면은 어? 여기서 이게 뭐지 하고 쫓아갈 수 있는 그런 것들이 하이퍼링크라는 걸로
11:17 ~ 11:22 -  구현을 할 수 있으니까 굉장히 좋았다 라는 거죠
11:22 ~ 11:30 -  그래서 이거를 이제 처음에 이 문서를 만들 때 HTML을 만들 때 만드시는 분들이
11:30 ~ 11:41 -  어떤 걸 했었냐면은 어떤 특정 단어라든지 아니면은 특정 문장이 만약에 다른 문서하고 연결이 될 수 있다 여러분들 뭐 위키백화 같은거 생각하시면 되겠죠
11:41 ~ 11:48 -  그러니까 전형적으로 위키백화가 이런 초기에 쓰던 html하고 비슷하다고 볼 수 있을 것 같은데
11:48 ~ 11:51 -  이미지 이런거 거는 그렇게 많지는 않고
11:51 ~ 11:53 -  버튼 같은 것도 이미지로 돼 있고
11:53 ~ 11:54 -  막 이렇지 않고
11:54 ~ 11:56 -  그냥 텍스트 위주로 돼 있는데
11:56 ~ 12:00 -  뭔가 심도 있게 뭐를 또
12:00 ~ 12:03 -  더 궁금한 게 있다면 누르면 쫓아갈 수 있도록 이렇게 되어 있는 거죠.
12:04 ~ 12:07 -  그래서 특정 단어가 다른 문서로 이동할 수 있다.
12:07 ~ 12:09 -  그러니까 그 얘기는 무슨 얘기였냐면
12:09 ~ 12:14 -  이 문서에 대한 문서가, 이 단어에, 죄송합니다.
12:14 ~ 12:20 -  특정 단어에 대한 문서가 이미 만들어져 있다고 하면
12:20 ~ 12:24 -  이 단어를 그 문서하고 연결시키는
12:24 ~ 12:25 -  그런 과정이 필요하다는 거죠.
12:27 ~ 12:29 -  그래서 이 한 문서를 작성을 할 때
12:30 ~ 12:39 -  html 작성을 할 때 그 단어하고 문서를 연결할 링크 정보를 수동으로 아 이거 어디에 연결돼 있을 텐데 이거에 해당하는 단어에 해당하는
12:39 ~ 12:47 -  문서가 있을텐데 하면 그거를 연결을 해줘야 된다는 거죠 정보들을 저장을 해야 된다는 겁니다
12:47 ~ 12:51 -  자 그래서 그럴 때 사용하는 것이 a 라고 하는 태그를 사용하는데요.
12:51 ~ 13:00 -  태그라고 하는 것은 html에서 어떤 제가 이 me markup이라고 했는데
13:00 ~ 13:10 -  이 m에 해당하는 겁니다. 그래서 뭔가 정보가 있는데 그 정보의 부가적인 정보를 감싸서 앞뒤를 이렇게 감싸가지고 쓰는데
13:10 ~ 13:15 -  그거를 태그라고 부르게 되는 거죠. 나중에 다 말씀을 드리겠습니다.
13:15 ~ 13:24 -  어쨌든 그 태그라는 걸로 a를 사용을 한다라는 겁니다. a. 간단하게 그냥 짧은 이걸 뭔가 이렇게 짧게 만들었다는 얘기는
13:25 ~ 13:28 -  많이 사용을 할 거다라고 예측을 했다는 게 되겠죠.
13:28 ~ 13:30 -  그래서 왜냐하면
13:30 ~ 13:33 -  매번 써야 되는 걸 굉장히 길게 쓴다 그러면 굉장히 답답할 테니까
13:33 ~ 13:39 -  그냥 단순하게 A만 써가지고 링크를 쓸 수 있도록 그렇게 만들어 놓은 거죠.
13:40 ~ 13:41 -  문서를 링크할 수 있도록.
13:41 ~ 13:45 -  그래가지고 뭔가를 읽다 보니까 사전을 읽다 보니까
13:45 ~ 14:00 -  위키피디아 같은 걸 읽다 보니까 모르는 게 나와서 다시 또 그거를 쫓아가서 보고 또 그러다 보니까 거기에서 그 문서에서 또 모르는 게 있어 갖고 또 쫓아가서 보고 뭐 이런거 그렇게 꼬리에 꼬리를 무는 해결
14:00 ~ 14:09 -  궁금증을 해결하는 방법에 유용하다는 거죠. 근데 이제 이렇게 유용할 거라고 생각을 했는데
14:09 ~ 14:16 -  실제로는 뭔가를 찾다가 모르는 다음에 나와서 쫓아가서 보고, 쫓아가서 보고 그러다 보니까
14:16 ~ 14:22 -  길을 잃는 그런 경우가 발생을 하더라 라는 겁니다
14:22 ~ 14:30 -  우리가 흔히 뭐 나는 누구고 여기는 어디냐 뭐 이런거 있죠 그래서 지금 내가 뭘 찾으려고
14:30 ~ 14:35 -  보고 있었지 근데 여기까지 왔지 이런 케이스들이 많이 생기더라 라는 거죠
14:35 ~ 14:41 -  그러니까 원래 내가 목적지가 있었는데 거기를 가기 위해서 문서를 보고 있다가
14:41 ~ 14:50 -  여기서 다른 데로 연결되고 또 다른 데로 연결되고 이런 길을 잃는 경우가 발생을 하더라 라는 겁니다
14:50 ~ 14:51 -  그래서 초기에는 이런 식으로 많이 사용이 됐고요 그런 경우가 발생을 하더라 라는 겁니다
14:51 ~ 14:55 -  그래서 초기에는 이제 이런 식으로 많이 사용이 됐구요
14:55 ~ 15:00 -  요즘에는 근데 뭐 이렇게 문장으로
15:00 ~ 15:06 -  있는 것보다는 예를 들면 포털 사이트 나 이런 기사들이 있는거 보면은
15:06 ~ 15:14 -  주로 이제 기사들 제목 같은거 전체가 그 밑줄이 그어져 있죠. 그러니까 연결할 수 있도록 되어 있고 아니면은
15:14 ~ 15:19 -  이미지 버튼들 같은거 굉장히 많이 사용을 하고 굉장히 미려하게 이쁘게
15:19 ~ 15:22 -  이미지들 굉장히 많이 활용하고 있는 거
15:22 ~ 15:23 -  여러분들 보실 수 있겠죠
15:23 ~ 15:24 -  사진이 있어 사진으로 연결되고
15:24 ~ 15:27 -  이런 것들 그런 거 흔히 사용을 하고 있죠
15:27 ~ 15:30 -  그래서 훨씬 더 이쁘게 사용을 하는데
15:30 ~ 15:37 -  처음에 이렇게 쓰다가 컴퓨터 성능이 높아지면서 그런 이미지들을 사용하는 것이 아니고
15:37 ~ 15:43 -  Flash라든지 ActiveX 컨트롤 이런 걸 들어보신 적이 있는지 모르겠는데
15:43 ~ 15:47 -  Silverlight 이런 것들 들어보신 적이 있는지 모르겠는데
15:47 ~ 15:54 -  그런 것들, 플러그인들을 웹브라우저에서 사용하는 그런 경우가 굉장히 많아집니다.
15:54 ~ 16:00 -  그래서 물론 이제 뭐
16:00 ~ 16:12 -  좋죠. 추가의 플러그인들을 설치하다 보니까 기존의 웹브라우저에서 하지 못했던 일들을 많이 할 수 있는 것은 좋았는데
16:12 ~ 16:18 -  다만 이제 운영체제의 문제였었는지 아니면 브라우저의 문제였는지는 모르겠지만
16:18 ~ 16:21 -  보안 측면이라든지 이런 측면에서는
16:21 ~ 16:24 -  그렇게 썩 좋지 못했다는 것이 현실입니다.
16:24 ~ 16:27 -  그래가지고 지금 보면은
16:27 ~ 16:30 -  Flash라든지 ActiveX 플러그인
16:30 ~ 16:42 -  경우가 거의 없죠. 물론 이제 html5 라고 하는 그런 새로운 표준이 나와 가지고 거기서 이런 것들을 전부 다 일부를 수용을 하고 이런 것도 있겠고
16:42 ~ 16:55 -  그 다음에 웹 어셈블리 뭐 그런 말씀드린 적이 있는데 그럼 웹 어셈블리 같은 거 경우도 또 나오기 때문에 이제 이런 것들이 좀 바뀔 거라고 생각이 되는데요
16:55 ~ 16:56 -  지금 이거는 변천사니까
16:56 ~ 17:00 -  중간 과정으로 이런 것들을 쓰는 것이 있었던
17:00 ~ 17:05 -  이런 걸 많이 쓰던 시절이 있었다는 겁니다
17:05 ~ 17:11 -  그래서 어쨌든 간에 요즘에는 아까 말씀드린 대로 텍스트 단어의 링크를 연결하는 것보다는
17:11 ~ 17:15 -  이미지나 제목의 링크를 연결하는 문장 같은 거에 연결하거나
17:15 ~ 17:20 -  아니면 사진을 누르면 연결되고 이런 것들이 굉장히 많아졌다는 거고요
17:20 ~ 17:25 -  본래의 데이터뿐만이 아니고, 진짜 데이터가 있는 것뿐만이 아니고
17:25 ~ 17:30 -  HTML을 뭔가 미려하게, 이쁘게
17:30 ~ 17:41 -  꾸미기 위한 요소들이 많이 포함되어 있다 라고 그래서 굉장히 요즘 그 웹페이지를 이쁘게 만드는 그런 추세가 있다라는 거죠
17:41 ~ 17:54 -  그래갖고 뭔가 데이터들이 있으면 예를 들면 글씨가 있다라고 그러면 글씨 폰트를 굉장히 다양하게 쓰고 작게도 쓰고, 크게도 쓰고, 색깔도 바꾸고 그래가지고
17:54 ~ 18:00 -  좀 이쁘게 만들기 위해서 굉장히 다양하게 실제 데이터
18:00 ~ 18:08 -  예를 들면 이런 문장이 있다라고 하면 이 문장에다가 얘하고 얘하고 색깔을 다르게 해가지고 넣는다든지 뭐 이런 식으로 뭐가 굉장히 그
18:08 ~ 18:20 -  실제 데이터, 이 문장이라는 데이터 말고도 꾸미는 데이터가 많이 들어가 있는 그런 추세가 있었다라는 거죠.
18:20 ~ 18:23 -  자 근데 너무 그렇게 또
18:25 ~ 18:26 -  꾸미는데 치중을 하다 보니까
18:27 ~ 18:30 -  이게 별로 그렇게 좋지 않다는 것을
18:30 ~ 18:32 -  저희가 인식을 한 거죠.
18:32 ~ 18:34 -  그래서 소프트웨어 엔지니어링 같은 데서 보면
18:34 ~ 18:39 -  데이터하고 표현, 뭔가 실제 데이터
18:39 ~ 18:43 -  아까 예를 들었던 이런 문장이 데이터라고 보면
18:43 ~ 18:47 -  얘를 지금 여기에 폰트를 가지고 이렇게
18:47 ~ 18:50 -  제가 생각하기엔 이쁘다고 생각하는 이런 폰트를 가지고
18:50 ~ 18:51 -  이렇게 출력을 했는데 이런 것들이 표현이 되어있고 제가 생각하기엔 이쁘다고 생각하는 폰트를 가지고
18:51 ~ 18:52 -  이렇게 출력을 했는데
18:52 ~ 18:55 -  이런 것들이 표현이 된다는 거죠
18:55 ~ 18:57 -  글씨 크기도 보면은
18:57 ~ 19:00 -  이 크기하고 이 크기하고
19:00 ~ 19:06 -  앞에 이런 것도 붙였고 이런 것들이 이제 표현에 해당하는 거다 라는 겁니다
19:06 ~ 19:16 -  문장도 있고 이게 문장이 데이터고 이런 나머지 것들 이런 것들이 글자 색이라든지 이런 것들이 표현이 된다는 거죠
19:16 ~ 19:24 -  그래서 예전에는 이거를 한꺼번에 그냥 웹브라우저에서 이렇게 보여줬다라고 하면
19:24 ~ 19:30 -  여기다가 폰트라든지 이런 것들을 다 지정을 해가지고 굉장히 데이터하고
19:30 ~ 19:33 -  표현이라고 하는 것이
19:33 ~ 19:35 -  혼재되어 있는
19:35 ~ 19:36 -  그런 게 있었는데
19:36 ~ 19:39 -  요즘에는 이런 거를 분리하려고 한다라는 거죠
19:39 ~ 19:43 -  자 그래서 데이터라고 하는 거는
19:43 ~ 19:45 -  실제 내용이 되는 데이터를
19:45 ~ 19:46 -  얘기를 하는 거고요
19:46 ~ 19:48 -  표현이라고 하는 것은 데이터를 시각적으로
19:48 ~ 19:50 -  출력하기 위해서 꾸미는 방법이라고 했었죠
19:50 ~ 19:55 -  그래서 이 데이터하고 표현, 예전에 무슨 웹 에디터,
19:55 ~ 20:00 -  유명한 그런 웹 에디터들이 많이 있었는데 그런 거를 써가지고
20:00 ~ 20:04 -  페이지를 만들게 되면 굉장히 복잡한 페이지가 나옵니다.
20:04 ~ 20:09 -  그래서 폰트, 색상, 여러 가지 것들이
20:09 ~ 20:13 -  표현하는데 그냥 위주로 되어 있기 때문에
20:13 ~ 20:18 -  굉장히 복잡한 그런 HTML 소스가 나오게 되는 거죠.
20:18 ~ 20:20 -  그래서 어떤 게 데이터고,
20:20 ~ 20:24 -  어떤 게 화면에 보여주기 위한 건지가 혼재되어 있으니까
20:24 ~ 20:30 -  진짜 원하는 데이터만을 꺼내기가 그렇게 쉽지 않았다고 생각합니다.
20:30 ~ 20:43 -  볼 수 있겠죠. 자 그래서 데이터하고 표현을 분류하는 추세를 보면은 소프트웨어에서 바람직한 구조를 설계할 수 있도록 해주는 디자인 패턴이라고 하는 게 있는데요.
20:43 ~ 20:54 -  컴퓨터공학과 학생들은 디자인 패턴을 좀 공부하셔야 됩니다. 컴퓨터공학과가 아니신 분들은 그렇게 볼 필요는 없을 거라고 생각이 되고요.
20:54 ~ 21:00 -  이런 거죠. 이거는 뭐냐면 컴퓨터 프로그램을 특히 컴퓨터공학과
21:00 ~ 21:09 -  학생들한테 제가 매번 하는 얘기가 설계를 잘해야 된다 라고 얘기한다고 했었죠. 그러면 어떻게 잘하는데
21:09 ~ 21:18 -  어떻게 좋은 설계고 어떻게 해야 돼? 그러면 막막하죠. 그래서 그거를 프로그램을 정말 잘하는 사람들이 4명이
21:18 ~ 21:30 -  GANG OF 4 라고 하는 사람들이 디자인 패턴 이라고 하는 책을 된 거죠 이럴 때는 이렇게 하고 저럴 땐 저렇게 라고 어떤 패턴 별로 어 이렇게 하는게 좋을
21:30 ~ 21:42 -  좋겠다라고 구조들을 제시를 했습니다 굉장히 유용하게 다 생각이 되는데 어쨌든 뭐 어 직접 적용하려면 뭐 그렇게 쉽지 않은데 어쨌든 이 디자인 패턴들이
21:42 ~ 21:52 -  쉬운 것들도 많이 있구요 그래서 어 따를 수 있는 것도 많이 있고 하는데 그 중에 하나가 뭐냐면 아주 기초적인 구조에서 기초적인 게 MVC 모델이 됩니다.
21:52 ~ 22:00 -  그래서 앱을 만들 때, 어플리케이션을 만들 때 한꺼번에 그냥 다 몰아서 하는 게 아니고
22:00 ~ 22:09 -  모델 뷰 컨트롤러 이렇게 나눠 가지고 프로그래밍을 해라 역할 분담을 서로 나눠서 해라 이런 추세들이 있습니다
22:09 ~ 22:16 -  예전부터도 프로그램을 웬만큼 한다고 했던 사람들은 모듈 프로그래밍이라는 걸 했었거든요
22:16 ~ 22:26 -  그래서 모듈별로 나눠 가지고 기능에 따라서 모듈을 나눠 넣고 그 모듈에 해당 기능을 구현해 가지고 그렇게 사용을 하고 있었는데
22:26 ~ 22:30 -  그게 조금 더 발전을 해 가지고 이제 클래스로 발전을 한 겁니다.
22:30 ~ 22:45 -  그래서 클래스들을 만들어 가지고 클래스들을 가지고 모아 가지고 거기에 객체들을 만들어 가지고 객체들의 집합으로 그런 어플리케이션을 구성을 하고 있는데요.
22:45 ~ 22:53 -  거기서 대표적으로 해야 되는 일들 뭔가 비즈니스 로직 같은 게 필요하게 될 거고요
22:53 ~ 23:00 -  그 다음에 그거를 화면에 눈에다가 보여주는 그런 부분이 있겠죠 그래서 모델이라고 하는 부분이
23:00 ~ 23:03 -  데이터를 관리하고 비즈니스 로직을 처리하는 부분이고
23:03 ~ 23:07 -  뷰라고 하는 부분이 그거를 화면에 출력해 주는 그런 부분입니다
23:07 ~ 23:12 -  그래서 컨트롤러가 모델에 있는 내용을 가져다가 뷰한테 넘겨 줘 가지고
23:12 ~ 23:15 -  그거를 출력하는 이런 식으로 되어 있는 것을
23:15 ~ 23:18 -  이 MVC 모델이 발전해 가지고
23:18 ~ 23:22 -  굉장히 다양한 뭐 이런 것들이 나오게 되는데요.
23:22 ~ 23:30 -  그 중에 하나가 MFC, 마이크로소프트에서 마이크로소프트 파운데이션 클래스죠.
23:30 ~ 23:40 -  어플리케이션 프레임워크를 위해서 마이크로소프트에서 어플리케이션 프레임워크를 위해서 만든 MFC 클래스, 마이크로소프트 기반 클래스들
23:40 ~ 23:51 -  여기에 보시면 이 프로그래밍하는 방법이 보면 도큐멘트 뷰 구조라고 하는 것을 제공을 하게 됩니다. 요즘에는 MVVM 이런 거, 모델 뷰, 뷰 모델 이런 거 들어보셨는지 모르겠는데
23:51 ~ 23:55 -  바인딩하고 이런 거, 그런 식으로 계속 발전이 되는데
23:55 ~ 24:00 -  그런 것들의 그 아주 기초적인 거에
24:00 ~ 24:06 -  중심이 뭐냐면 눈에 보이는 것하고 그 다음에 데이터, 비즈니스 로직
24:06 ~ 24:12 -  이거를 철저하게 분리하자라는 것이 주된 내용이다라는 거죠.
24:13 ~ 24:19 -  이거는 HTML이기 때문에 데이터하고 그 다음에 표현하는 비즈니스 로직이
24:19 ~ 24:22 -  물론 자바스크립트 같은 걸로 넣을 수 있긴 하지만요.
24:22 ~ 24:27 -  어쨌든 데이터하고 이 표현을 분리하는 추세가 있다는 거죠.
24:27 ~ 24:30 -  그래서 HTML에다가는
24:30 ~ 24:35 -  데이터만 저장하자 라는 것이 결론이 되는 겁니다
24:35 ~ 24:38 -  그러면 눈에 보이는 건 어디에 저장하느냐
24:38 ~ 24:43 -  CSS라고 하는 Cascading Style Sheet에 저장하자라는 거죠
24:43 ~ 24:46 -  그래서 이 부분이 핵심이 되는 겁니다
24:46 ~ 24:50 -  그러니까 HTML에다가 원래는 이게 화면에 잘 출력하고
24:50 ~ 24:53 -  이런 목적으로 나온 것이 맞지만
24:53 ~ 25:00 -  뭔가 화면에 출력하는 부분은 가능하면 HTML에다가 저장하지 말고 폰트라든지 이런거는
25:00 ~ 25:05 -  html 파일에 저장하지 말고 그 스타일에다가 저장을 해라 라는 거죠.
25:05 ~ 25:10 -  여기에 그 캐스케이드 라고 하는 것은 뭔가 이렇게 연속으로 쫓아가는 거 이런
25:10 ~ 25:14 -  것을 얘기하는 거거든요. 그래서 뭔가 스타일이 있다라고 하면
25:14 ~ 25:20 -  그거에 맞춰 갖고 다른 것을 적용하는 이런 거라고 생각하시면 되겠습니다.
25:20 ~ 25:24 -  그래서 그 캐스케이딩, 뭔가 쫓아가는 그런 게 있고
25:24 ~ 25:30 -  스타일, 스타일에 대한 어떤 스타일들을 기술해 놓은 시트가 있는 거죠.
25:30 ~ 25:40 -  데이터 시트 처럼 그래서 그런 스타일 cc 있는데 그거에 맞춰 가지고 그거에 따라 가지고 스타일을 적용하는 거다 라고 보시면 되겠습니다
25:41 ~ 25:52 -  자 그래서 우리가 어 지난 시간에 그 구름 id 스택을 만들 때 html 그 다음에 css js 이런 스택을 우리가 선택을 했었는데
25:52 ~ 25:59 -  그때 HTML하고 CSS가 이거에 해당한다는 걸 보시면 되겠죠.
26:00 ~ 26:04 -  자 그 다음에 이제 하나 남은 거죠
26:04 ~ 26:07 -  그러니까 HTML, CSS 그 다음에는
26:07 ~ 26:09 -  자바스크립트가 되겠죠
26:09 ~ 26:12 -  그래서 어떤 이 클라이언트 사이드에서
26:12 ~ 26:15 -  그러니까 클라이언트 사이드라고 하는 것은 웹브라우저입니다
26:15 ~ 26:19 -  그래서 웹브라우저에서 뭔가 스크립트를 처리할 수 있는 능력들
26:19 ~ 26:22 -  그런 것들이 필요하게 됐다는 거죠.
26:23 ~ 26:30 -  그걸 설명하기 위해서 스태틱과 다이내믹, 정적인 거하고 동적인
26:30 ~ 26:34 -  것을 설명을 하고 있는데요 정적인 거다 라는 것을 한번 정해지면
26:34 ~ 26:40 -  변경되지 않는 것을 정적이다 스태틱하다 그렇게 얘기합니다
26:41 ~ 26:45 -  다이내믹 하다라는 건 뭐냐면요 뭔가 정해진 게 있더라도 상황에 따라서
26:45 ~ 26:51 -  계속 유연하게 변경되는 것 그런거를�� 동적이다라고 하는 거죠.
26:51 ~ 26:54 -  얘는 변하지 않는 거 얘는 변하는 거 이렇게 생각하셔도 됩니다.
26:55 ~ 27:00 -  자, 예제 한번 볼까요? 정적이다라는 거는 휴일에 어디
27:00 ~ 27:03 -  놀이동산에 놀러 가려고 해요. 테마파크에 놀러 가려고 해요.
27:03 ~ 27:07 -  그래서 요즘에 이렇게 하시는 분들은 없으실 거라고 생각이 되는데
27:07 ~ 27:11 -  옛날에는 지도를 보고서는 지도 책이 있었어요.
27:12 ~ 27:14 -  전국 지도가 나와 있는 그런 책이 있었습니다.
27:14 ~ 27:18 -  그래서 보험 가입하면 그런 거 주기도 하고 그랬었는데
27:18 ~ 27:23 -  어쨌든 그런 지도를 보고 여기서 몇 번 국도를 타고 간 다음에
27:23 ~ 27:28 -  여기서 어디서 어떤 사거리가 나오면 거기서 우회전을 해야 되고
27:28 ~ 27:30 -  이런 거를 막 미리
27:30 ~ 27:34 -  책을 보고 갔던 적이 있다는 거죠. 내비게이션이 개발되기 전에는.
27:35 ~ 27:40 -  그런 식으로 해서 지도를 보고 길을 정한 뒤에 내가 가는 건 그 길밖에 모르니까
27:40 ~ 27:47 -  그 길을 따라서 막히던 말던 그 길로 계속 운전해서 목적지에 도착하게 되는
27:47 ~ 27:54 -  그런 것이 정적인 거다라는 거죠. 정적인 라우팅을 한번 해놨다 그러면 그냥 그 길을 계속 따라가는 거죠.
27:54 ~ 28:00 -  반면에 다이내믹하다는 것은 내비게이션을 따라서 운전을 하는 거죠.
28:00 ~ 28:05 -  오비게이션이라는 게 가다가 보면은 뭐 교통 상황을 반영하여 경로를 재설정합니다.
28:05 ~ 28:10 -  이렇게 나오잖아요. 그런 것들이 다이내믹한 거다 라고 보시면 되겠죠.
28:10 ~ 28:18 -  자 그래서 스태틱 웹페이지라고 하는 것은 서버에서 뭔가 html을 받아 가지고 렌더링을 했다 라고 하면은
28:18 ~ 28:20 -  그게 변하지 않는 거 그거를 스태틱
28:25 ~ 28:28 -  약간 좀 다른 의미가 있긴 한데 어쨌든 그냥 이렇게 생각하십시오. 일단은 그래서 그걸 스태틱 웹페이지라고 보시면 되겠고요.
28:28 ~ 28:30 -  그다음에 다이내믹
28:30 ~ 28:35 -  웹페이지 라고 하는 것은 서버에서 html 랜더링 해가지고 화면에 출력을
28:35 ~ 28:41 -  했어요 근데 여기서 뭔가 사용자가 뭐를 이벤트를 발생시켰다 던가 아니면
28:41 ~ 28:46 -  어 뭐 그 리프레쉬 버튼을 눌러 가지고 서버에서 지금 게시판에 새로운
28:46 ~ 28:51 -  게시물이 올라온 게 있는지 이런 거를 가지고 온다 라고 하면은
28:51 ~ 28:54 -  그런 것들은 다이내믹 웹페이지라고 그렇게 부를 수 있겠죠.
28:56 ~ 28:59 -  뭐 이것뿐만이 아니고 일단
29:00 ~ 29:03 -  꼭 데이터베이스나 이런 걸 가지고 오는 게 아니더라도
29:03 ~ 29:06 -  뭔가 현재 받아온 페이지에서
29:06 ~ 29:07 -  뭐를 눌렀더니
29:07 ~ 29:10 -  예를 들면 뭔가 휙 작아지고
29:10 ~ 29:12 -  그림이 휙 작아지고
29:12 ~ 29:14 -  이런 거 여러분들 보신 적 있나요?
29:14 ~ 29:17 -  예를 들면 커버를 호버링이라고 하는데
29:17 ~ 29:20 -  커버를 그림 위로 딱 가져가게 되면
29:20 ~ 29:21 -  그림이 조금 더 커진다든지 조금 더 작아진다든지 이런 거 색깔을 이라고 하는데 커서 그림 위로 딱 가져가게 되면
29:23 ~ 29:24 -  그림이 조금 더 커진다든지 꽃 조금 더 작아진다든지
29:27 ~ 29:30 -  이런 거 색깔이 더 진해진다든지 이런 거 보신 적 있나요? 흐려진다든지 이런 것들 그런 것들도
29:30 ~ 29:37 -  전부 다 기존에 받은 HTML에서 뭔가 사용자의 마우스가 움직임에 따라서
29:37 ~ 29:40 -  그거에 대한 어떤 동적인 처리를 해주게 되는 거죠.
29:41 ~ 29:43 -  웹브라우저에서 그런 처리를 해주게 되는 거죠.
29:43 ~ 29:47 -  그래서 그런 거를 할 때 자바스크립트가 사용이 된다.
29:47 ~ 29:49 -  그렇게 여러분들이 생각을 하시면 되겠습니다.
29:51 ~ 29:54 -  그 다음에 저희가 HTML에서 좀 고려해야 되는 것이 뭐가 있냐면
29:54 ~ 29:57 -  SEO라고 하는 건데요.
29:57 ~ 30:00 -  Search Engine Optimization
30:00 ~ 30:01 -  이라고 하는 겁니다.
30:01 ~ 30:04 -  그러니까 서치엔진 최적화라고 하는 건데요.
30:06 ~ 30:06 -  목표가 뭐냐.
30:07 ~ 30:09 -  우리가 어떤 웹페이지를 만들었어요.
30:10 ~ 30:17 -  그럼 웹페이지의 목표가 물론 이제 내가 했던 거 내가 까먹을까 봐
30:17 ~ 30:22 -  저장을 해놓는다든지 이런 것들도 있겠지만 기왕이면 내가 만들어서 배포한 문서가
30:22 ~ 30:26 -  퍼블리쉬한 문서가 발행한 문서가
30:26 ~ 30:30 -  다른 사람들이 많이 본다면 좋겠죠. 그래서 검색엔
30:30 ~ 30:33 -  엔진에 상위 랭크된다면 굉장히 좋을 겁니다.
30:33 ~ 30:38 -  그래서 그런 거를 위해서는 뭔가 최적화가 필요하다는 거죠.
30:38 ~ 30:45 -  그래서 여기에 보시면 구글에 보면 어떤 식으로 스타트 가이드가 있으니까요.
30:45 ~ 30:55 -  혹시 이런 검색 엔진에서 상위 내 블로그 기사가 내가 쓴 블로그 포스트가 좀 상위된
30:55 ~ 31:00 -  그때 쓰면 좋겠다 이러신 분들은 이런 가이드를 좀 보시는 거를
31:00 ~ 31:02 -  권장을 드리겠습니다
31:03 ~ 31:12 -  자 그래서 그런 그 방법들에 대해서 몇 가지 설명을 드리려고 하는데요 제일 처음에 말씀드리려고 하는 것은 타이틀입니다
31:12 ~ 31:23 -  이 타이틀이라고 하는 것을 그 html 태그에서 가지고 있게 되는데요 이 타이틀이라고 하는 것은 어떤 그�페이지의 제목이 되니까 굉장히 중요한 게 되겠죠.
31:23 ~ 31:30 -  그래서 웹페이지에서 뭘 설명하고 있는지 거기에 어떤 내용을
31:30 ~ 31:35 -  담고 있는지를 정확하게 기술하는 것이 굉장히 중요할 거라고 생각이 됩니다.
31:36 ~ 31:38 -  그 다음에는 메타태그들인데요.
31:39 ~ 31:43 -  메타태그에 보시면 메타데이터죠.
31:43 ~ 31:47 -  메타데이터라고 하는 것은 데이터에 대한 데이터라고 보시면 되는데
31:47 ~ 32:00 -  예를 들어서 여러분들이 어디 가서 사진을 찍었다고 하면 사진을 몇 시에 찍었는지 그 다음에 언제 찍었는지 그리고 어디서 찍었는지 그리고 이걸 노출은 얼마나 했는지
32:00 ~ 32:04 -  노출값은 어떻게 되는지, 초점거리는 어떻게 되는지 이런 것들이 있겠죠.
32:04 ~ 32:15 -  광각으로 찍었느냐 이런 것들이 포함이 될 건데 그런 실제 데이터는 사진이지만, 사진 이미지지만 그 사진에 대한 데이터들 있죠.
32:15 ~ 32:23 -  그런거를 메타 데이터라고 이렇게 이야기하게 됩니다. 여기서도 그 메타데이터를 정의하는게 이렇게 쓰는 건데요.
32:23 ~ 32:25 -  거기에 보시면 메타데이터 중에 보시면
32:25 ~ 32:28 -  description이라고 하는게 있는데
32:28 ~ 32:30 -  이 description이라고 하는 것은
32:30 ~ 32:35 -  그 컨텍스트가 아니고 컨텐츠 인데요
32:35 ~ 32:46 -  자 오타가 있어서 바로 잡았습니다. 그래서 이 description에 대한 내용으로 이렇게 써 주게 되는 거죠. 그래서 이 부분이 굉장히 중요하게 된다 라는 겁니다.
32:46 ~ 32:53 -  검색엔진에서 이 부분을 굉장히 중요하게 생각을 한다는 것. 여기에 들어가 있는 내용을 굉장히 중요하게 생각하니까
32:53 ~ 32:56 -  이 두 가지 여기에다가 뭐 쓸데없는 거,
32:56 ~ 33:00 -  뭐를 자동으로 생성된 텍스트입니다. 이런 거 쓰면
33:00 ~ 33:06 -  안된다는 거죠 자 얘는 너무 길면 은 80자 까지만 인식을 하고 어떤 시스템에서는 뭐
33:06 ~ 33:16 -  160자 이렇게 하는게 있는데 어쨌든 80자 까지 하는 시스템들이 있으니까 가능하면 80자 이내로 설명을 하는게 좋을 거구요
33:16 ~ 33:24 -  이런게 있습니다 그 키워드 라고 하는게 있어요 그래서 그래서 어떻게 보면은 그냥 완전히 SEO를 위해서
33:24 ~ 33:26 -  정말 딱인 그런 키워드니까요.
33:26 ~ 33:30 -  중요한 단어들 나열하는 거니까 정말
33:30 ~ 33:40 -  더할 나위 없이 좋겠다 이렇게 생각이 되지만 실제로 구글을 포함한 그런 검색엔진에서 얘는 고려를 하지 않는다고 합니다
33:40 ~ 33:49 -  얘를 반영을 하지 않는 거죠. 그러니까 이 부분은 뭐 굳이 그렇게 안 써도 될 거라고 생각이 되고
33:49 ~ 33:52 -  description 그 다음에 title 이런 것들이 중요하다는 거고요.
33:53 ~ 33:55 -  그 다음에 헤딩스, 문서 내부에 보면
33:55 ~ 33:58 -  이런 헤딩이라고 하는 것을 쓰게 되는데요.
33:58 ~ 34:00 -  이게 제목이죠, 제목.
34:00 ~ 34:09 -  heading 이라고 하는 것이 제목이기 때문에 제목은 1부터 6인가요? 이렇게 정해져 있는데 h1이 제일 큰 제목
34:09 ~ 34:18 -  그 다음에 h2 라고 하는 것 이거보다 하나 밑에 제목 이 밑에는 만약에 또 있다 그러면
34:18 ~ 34:22 -  h3 이렇게 만들 수 있거든요 그래서 이런 식으로 쭉 되어 있는데
34:22 ~ 34:26 -  예를 들면 문서 구조를 책처럼 정리가 되어 있다 그러면 몇 장에
34:26 ~ 34:30 -  예를 들면 1장이 HTML이고
34:30 ~ 34:40 -  css 다 라고 하면은 일장이 있고 그 일장에 해당하는 것 중에서 뭐 어떤 태그들 뭐 이런 것들이 있을 수 있겠죠 그래서 고거에 해당하는 이 일장에
34:40 ~ 34:47 -  그 서브들 서브 h2 로 되어 있는 절들이 있을 있게 될텐데 장 밑에 절들이 있게 되니까요
34:47 ~ 34:53 -  그런 것처럼 이렇게 구조를 만들 때 여기에 있는 것들도 굉장히 중요하게
34:53 ~ 35:00 -  검색엔진이 생각하더라 라는 거죠. 그래서 이거를 여러분들이 여기다가도
35:00 ~ 35:06 -  유용한 내용들을 많이 써 놓는 것이 검색엔진에서 상위노출 할 수 있는 길이다라는 거구요
35:06 ~ 35:17 -  그 다음에 오픈 그래프라고 하는 것이 있는데요 여러분들 카톡 같은데 보면 이렇게 그 sns 하실때 여기다가 링크를 해서 보내면 나는 요거 이 텍스트
35:17 ~ 35:25 -  보냈는데 이 웹페이지에 가 가지고 이렇게 그림하고 기본적인 내용 이런 것들을 가지고 오는 걸 보신 적이 있을 겁니다.
35:25 ~ 35:30 -  그래서 이런 것이 오픈 그래프라고 하는 것을 제공을 합니다.
35:30 ~ 35:35 -  이런게 가능하거든요. 그래서 이런 오픈 그래프에 보시면 여기에 타이틀이라든지
35:35 ~ 35:38 -  og라고 하는 것은 오픈 그래프에 준 말인데요.
35:38 ~ 35:44 -  namespace og colon 해가지고 타이틀인데 og에서 쓰는 타이틀이다라고 알려주는 거거든요.
35:44 ~ 35:50 -  그래서 어쨌든 og colon title 그 다음에 og colon description 이 뒤에 나오는 내용들에
35:50 ~ 35:56 -  그 내용들이 굉장히 좀 중요하게 사용이 된다라는 거죠.
35:56 ~ 36:00 -  그래서 그냥 글만 잘 적어놨으니까
36:00 ~ 36:07 -  내 글은 상위 검색엔진에 상위 노출되겠지 이렇게 생각하는 것이 아니고
36:07 ~ 36:15 -  실제로 이런 거를 더 신경을 써 주면 좋다는 것도 여러분들이 좀 신경을 써 주시면 좋을 것 같습니다
36:15 ~ 36:21 -  자 그 다음에 액세서빌리티 인데요 요즘 굉장히 중요하죠. Accessibility가.
36:23 ~ 36:24 -  제가 그
36:25 ~ 36:26 -  올해는 아니고
36:26 ~ 36:30 -  그 짧게 교환교수 갔다 오면서
36:30 ~ 36:32 -  굉장히 미국에서 놀랐던 점이 하나 있는데요.
36:33 ~ 36:34 -  미국에 도서관을 갔어요.
36:35 ~ 36:41 -  그런데 정말로 그냥 혼자서는 거동을 할 수 없고
36:41 ~ 36:45 -  한번 이동을 할 때는 굉장히 많은 사람들이
36:45 ~ 36:52 -  휠체어도 아니고 이렇게 움직일 수 있는 바퀴가 달린 침대에서
36:52 ~ 37:00 -  수액이라고 하나요?
37:00 ~ 37:02 -  수액 말고요. 수액.
37:03 ~ 37:04 -  그렇죠. 이렇게 맞는 거.
37:05 ~ 37:06 -  주사기 이렇게 맞는 거 있죠.
37:07 ~ 37:11 -  그래서 그걸 맞으면서 도서관에 있고
37:11 ~ 37:14 -  그거를 옆에서 누가 책을 읽어주고
37:14 ~ 37:15 -  제가 이런 거를 본 적이 있는데
37:15 ~ 37:17 -  정말 놀랐었어요.
37:17 ~ 37:19 -  우리나라 같으면 그 당시에
37:19 ~ 37:20 -  그렇게 그 정도 몸에 놀랐었어요. 그게 우리나라 같으면 그 당시에
37:25 ~ 37:30 -  그렇게 그 정도 몸이 힘들다. 몸이 힘든 상황이었으면 나다니기가 굉장히 힘들었을 것 같은데
37:30 ~ 37:32 -  그분이 이제 왔다 갔다 할 때
37:32 ~ 37:35 -  그런 차들이나 이런 게 제공이 돼가지고
37:35 ~ 37:37 -  도서관 어떤 지식에 대한
37:37 ~ 37:41 -  그런 열정이나 욕구를 가지고 있을 테니까
37:41 ~ 37:43 -  그런 거를 충족시킬 수 있는
37:43 ~ 37:46 -  그런 시스템이 있다는 것에 대해서
37:46 ~ 37:50 -  보면서 제가 아 정말 미국이 선진국이구나
37:50 ~ 37:51 -  이렇게 생각을 한 적이 있습니다
37:51 ~ 37:59 -  근데 사실은 뭐 그런 거 빼면 우리나라가 좋은 면도 굉장히 많이 있다는 것을
38:00 ~ 38:02 -  좀 느껴서 그때도 좀 의외긴 했었는데
38:02 ~ 38:07 -  어쨌든 그런 접근성이라고 하는 거
38:07 ~ 38:13 -  이런 것들이 굉장히 배려가 잘 돼 있다
38:13 ~ 38:14 -  이렇게 좀 느꼈었습니다
38:14 ~ 38:18 -  그래서 이 접근성이라고 하는 것은
38:18 ~ 38:22 -  가능한 많은 사용자가 접근할 수 있도록
38:22 ~ 38:25 -  접근성을 향상시킬 필요가 있다는 거죠.
38:26 ~ 38:29 -  그래서 눈에 보이는 요소에만
38:30 ~ 38:38 -  집중해 가지고 html을 작성하는 것이 아니고 뭔가 올바른 구조로 시멘틱 태그란 얘기가 나오는데요
38:38 ~ 38:46 -  뒤에 설명이 나올 겁니다 그래서 시멘틱 태그라고 하는 것은 의미론적으로 어떤 태그인데 의미를 갖고 있는 태그 태그라고 하는 것 자체가
38:46 ~ 38:51 -  그 마크업하는 마킹하는 기능이라고 했죠. 그러니까 원래 데이터가 있고
38:51 ~ 38:54 -  그거를 꾸며주는 부가적인 데이터인데
38:54 ~ 38:56 -  이 데이터가 뭐다라는 거를
38:56 ~ 39:00 -  의미론적으로 정확하게 잘 꾸미고 있으면
39:00 ~ 39:02 -  훨씬 더 이해하는데 좋겠죠.
39:03 ~ 39:06 -  사람은 그게 태그가 보이지 않기 때문에 상관없지만
39:06 ~ 39:11 -  뭔가 컴퓨터가 그걸 분석할 때는 훨씬 더 잘 이해할 수 있을 거다라는 겁니다.
39:13 ~ 39:18 -  그래서 올바른 구조로 이런 시멘틱 태그들을 사용을 해가지고
39:18 ~ 39:22 -  HTML을 작성하려고 하는 노력이 필요하다라는 거예요. 그냥 눈에 보이니까 똑같이 보이네을 해가지고 html 작성하려고 하는 노력이 필요하다는 거예요.
39:22 ~ 39:26 -  그냥 눈에 보이니까 똑같이 보이네 이렇게 해가지고 하지 마시고
39:26 ~ 39:30 -  내가 이걸 제대로 만든 구조인가? 이 태그를 쓰는 게 맞았나?
39:30 ~ 39:36 -  여러분들이 좀 생각을 하셔야 된다 라는 거죠. 그렇게 만약에 한다고 했을 때는 결과적으로
39:36 ~ 39:44 -  SEO, Search Engine Optimization이 검색 엔진 최적화가 잘 될 거다 라는 겁니다.
39:44 ~ 39:51 -  자 그래서 눈이 보이지 않거나 뭐 시력이 나쁘다든지 그 다음에 노안이 저처럼 노안이 왔다든지
39:51 ~ 39:54 -  아니면 생명이나 색약, 저는 색약도 있거든요
39:54 ~ 40:00 -  그러니까 색약이 있다든지, 청각이상 아니면
40:00 ~ 40:10 -  몸이 불편해서 정확한 위치를 클릭하기가 힘들다든지 뭐 이런 것들이 전부 다 장애라고 볼 수 있는데
40:10 ~ 40:20 -  그런 장애인들을 이렇게 얘기하는 것도 좀 꺼려져서 사실은 장애인 이렇게 얘기하는 것들도
40:20 ~ 40:22 -  그분들한테 신뢰가 될까봐 조금 좀
40:23 ~ 40:25 -  피하기는 어쨌든 언급을 해야 되겠네요.
40:25 ~ 40:27 -  이 accessibility라고 하는 것은
40:27 ~ 40:30 -  그런 장애를 가진 사람들도
40:30 ~ 40:33 -  우리가 만든 웹페이지를 접근할 수 있도록 해주는
40:33 ~ 40:36 -  그래서 그걸 접근성이라고 그렇게 얘기를 하는 겁니다
40:36 ~ 40:40 -  웹페이지뿐만이 아니고 앱을 만들 때도 마찬가지예요
40:40 ~ 40:44 -  그래서 만약에 눈이 잘 안 보이시는 분이 있다라고 하면
40:44 ~ 40:47 -  화면을 읽어주는 그런 화면 리더기들 같은 것이 있는데
40:47 ~ 40:52 -  그런 것들을 위해서 굉장히 세심하게 좀 신경 써서 해야 되는 부분들이
40:52 ~ 40:54 -  있거든요 웹페이지도 마찬가지다
40:54 ~ 40:55 -  라는 거죠
40:55 ~ 40:57 -  자 그래서
40:57 ~ 40:58 -  WHO
41:00 ~ 41:09 -  WHO에서 발표한 것을 보면 전 세계인 15% 정도, 굉장히 많은 거죠.
41:09 ~ 41:14 -  15% 정도에 해당하는 사람들이 장애를 가지고 있다, 그렇게 얘기를 했다고 합니다.
41:14 ~ 41:20 -  어떤 식의 장애인지는 모르겠지만 어쨌든 이런 뭐가
41:24 ~ 41:26 -  신체적인 거 말고도 정신적으로도 집중을 하기 힘들다든지 뭐 이런 게 있을 수 있거든요.
41:26 ~ 41:30 -  그러니까 그런 것들을 다 포함하게 되면은
41:30 ~ 41:40 -  15% 정도가 된다. 이렇게 얘기를 했다는 겁니다. 그래서 어쨌든 그런 사람들도 우리가 만든 웹페이지에 잘 접근할 수 있도록
41:40 ~ 41:50 -  우리가 신경을 써서 만드는 게 좋겠다라는 거죠. 그래서 어떤 방법들이 흔히 사용되냐면 텍스트를 그대로 읽어서 이해가 될 수 있도록 작성하는 게
41:50 ~ 41:54 -  좋다라고 되어 있는데요. 뭐냐면 눈이 보이지 않는다라고 했을 경우에
41:54 ~ 42:00 -  지금 현재 페이지를 읽어라 그러면 화면 리더기가 그걸 읽어주게 됩니다.
42:00 ~ 42:06 -  TTS 같은 걸 통해 가지고 읽어주게 되는데 TTS라고 하는 것은 Text to Speech라고 하는 거죠.
42:07 ~ 42:16 -  그래서 TTS나 이런 것들을 가지고 읽어주게 되는데 그때 만약에 마이너스 기호가 어디에서부터 어디까지 이렇게 돼 있다라고 하면
42:16 ~ 42:21 -  3-7 그러면 이게 3에서부터 7까지 페이지 3에서부터 7까지
42:21 ~ 42:24 -  페이지 3에서부터 7페이지 이렇게 써있다
42:24 ~ 42:25 -  그렇게 쓰는 것보다는
42:25 ~ 42:29 -  3페이지에서 7페이지까지 이런 식으로 쓰는 것이
42:30 ~ 42:35 -  좋은 표현이다라는 거죠. 그래서 그거를 3-7 이렇게 리더기가 읽는
42:35 ~ 42:41 -  것보다는 3에서부터 3페이지에서부터 7페이지까지 이렇게 쓰는 것이
42:41 ~ 42:45 -  들었을 때 훨씬 더 이해가 잘 되겠죠.
42:45 ~ 42:50 -  그 다음에 약어라든지 추각형 이런거는 좀 사용하는 것을 좀
42:50 ~ 42:51 -  지향해라
42:51 ~ 42:53 -  지양이라고 하는 건 하지 말라는 얘기입니다
42:53 ~ 42:56 -  지향이면 뭐뭐 하라는 거고
42:56 ~ 43:00 -  지양이면 뭐뭐 하지 말라는 거기 때문에
43:00 ~ 43:09 -  이런 것들도 굉장히 힘들다는 거죠. 그래서 그런 것들을 최소한 처음에 나왔다 그랬을 때는 그거를 좀 풀어서 써주고 그 뒤부터는
43:09 ~ 43:22 -  뭐 좀 약어를 쓰더라도 처음에는 좀 뭐 이건 근데 제가 생각하기에는 꼭 장애가 있다기 보다 그냥 일반적으로도 좀 적용되는 얘기라고 생각이 됩니다
43:22 ~ 43:25 -  자 그 다음에 웹페이지를 읽는데
43:25 ~ 43:28 -  만약에 그림이 있다라고 하면 굉장히 난감하죠
43:28 ~ 43:30 -  그래서 리더기가
43:30 ~ 43:41 -  그림을 어떻게 표현할지 그러니까 그 alt 라고 하는 그 얼터너티브 라고 하는 그 애트리뷰트가 있는데 img 태그에 보면은 alt 라고 하는 애트리뷰트가 있습니다.
43:41 ~ 44:00 -  애트리뷰트라고 하는 것은 태그에서 값을 가지고 있는 걸 애트리뷰트라고 이렇게 속성을 애트리뷰트라고 얘기를 하는데 그래서 그 그림이 있다라고 하면 어떤 그림인지 이런거를 기술하는 텍스트가 텍스트를 추가하는 것이 좀 좋겠다 라는 거죠
44:00 ~ 44:11 -  자 그래서 어쨌든 이런식으로 액세서빌리티 이런 것들도 HTML 만들 때 고려의 대상이 된다 라는 것을 여러분들이 좀 알고 계시면 좋을 것
44:11 ~ 44:13 -  같습니다
44:13 ~ 44:19 -  세심하게 만들어야 되겠죠. 자 그 다음에는 Semantic 태그라고 하는 건데요
44:19 ~ 44:22 -  Semantic 이라고 하는 거, 예를 들면 뭐 뭐가 있을까요?
44:22 ~ 44:26 -  여러분들 컴파일러 4학년 때 배우시면 뭐 Syntax Error, Semantic Error,
44:26 ~ 44:30 -  뭐 Semantic Error라고 하나? 아무튼 뭐 거기 Semantic이라고 하는 거죠.
44:30 ~ 44:38 -  어떤 그 문구가 스펠링을 잘못 쓴 게 아니고 의미론적으로 잘못 썼다고 할 때
44:38 ~ 44:41 -  semantic error라고 이렇게 이야기하게 되는데
44:41 ~ 44:45 -  semantic이라고 하는 것이 의미라는 뜻입니다. 의미.
44:45 ~ 44:49 -  그래서 의미에 맞는 태그들을 써야 된다라는 거죠.
44:49 ~ 44:55 -  그래서 단순히 화면에 표현되는 어떤 눈에 보이는 그런 시각적인 것뿐만이 아니고
44:55 ~ 45:00 -  의미를 포함하는 태그를 가능하면 적극적으로 써라 라는 거죠.
45:00 ~ 45:06 -  눈에 보기에 그냥 잘 보이는 것처럼 똑같이 보인다고 해서
45:06 ~ 45:10 -  두 개가 똑같이 가치를 가지고 있다 그건 아니라는 거죠
45:10 ~ 45:16 -  그러니까 점점 더 우리가 눈에 보이는 것하고 데이터를 분리하는 추세이기 때문에
45:16 ~ 45:23 -  여러분들께서 이런 시멘틱 태그를 사용하시는 것이 굉장히 좋겠다는 겁니다.
45:23 ~ 45:30 -  그래서 검색엔진에서 특히 앞에 있는 SEO랑 연결이 되는 거죠.
45:30 ~ 45:35 -  노출할 때도 이런 시멘틱 태그들을 중요하게 생각하기 때문에
45:35 ~ 45:39 -  이런 것들을 적극 활용하는 게 좋겠고요.
45:39 ~ 45:44 -  그 다음에 액세서빌리티, 앞에서 말씀드렸던 액세서빌리티를 위해서도
45:44 ~ 45:52 -  시멘틱 태그를 쓰게 되면 화면 리더기가 인식하기에 굉장히 좋다고 합니다
45:52 ~ 45:54 -  뒤에 예제를 한번 보도록 하고요
45:54 ~ 46:00 -  그 다음에 의미론적으로 분석 및 재가공하기에도 굉장히 좋다는 거죠
46:00 ~ 46:05 -  웹페이지를 뭐 이러면 크롤링 해가지고 뭔가를 사용한다 라고 했을 경우에
46:05 ~ 46:13 -  어 그때도 이제 뭐 굉장히 복잡하게 되어 있으면 원하는 정보를 그 찾아내기가 굉장히 힘들겠죠 그러니까
46:13 ~ 46:24 -  만약에 내가 정보를 제공하는 목적이고 남들이 걸 못 쓰게 하려고 하는 것이 아니다 라고 했을 경우에는 기왕이면 좀 좋게 잘 분석해서 쓸 수 있도록 해주면은
46:24 ~ 46:26 -  활용도가 높아지겠죠.
46:26 ~ 46:30 -  자 그래서 그럴 때도 그 의미의
46:30 ~ 46:32 -  맞는 태그를 쓰는 게 좋겠다 라는 거죠.
46:32 ~ 46:34 -  예제를 한번 보면은 이런 겁니다.
46:34 ~ 46:35 -  리스트라고 하는
46:35 ~ 46:37 -  것이 있고요. 리스트를 위한 태그들이
46:37 ~ 46:39 -  순서를 쓰는
46:39 ~ 46:41 -  오더드 리스트라고 하는
46:41 ~ 46:44 -  ol이라고 하는 태그가 있는데
46:44 ~ 46:45 -  거기에 li
46:45 ~ 46:47 -  리스트 아이템이라고 하는 태그가 있습니다.
46:48 ~ 46:49 -  그래서 얘는 뭐냐면
46:49 ~ 46:54 -  1 텍스트 여기 있는 거 2 텍스트 이런 식으로 표현해 주는 거거든요.
46:54 ~ 47:00 -  그래서 이런 식으로 일 리스트 아이템이 있으니까 일 텍스트
47:00 ~ 47:02 -  오더드 리스트니까 1 텍스트 하고요.
47:02 ~ 47:06 -  그 다음에 다음 한 줄 내려서 2 텍스트 이렇게 보여주게 되는데
47:06 ~ 47:13 -  여기에 이렇게 쓰여 있는 부분도 똑같이 1. 텍스트하고 한 줄 내리고
47:13 ~ 47:14 -  이게 한 줄 내리라는 거거든요.
47:14 ~ 47:18 -  한 줄 내리고 2. 텍스트하고 또 한 줄 내리고
47:18 ~ 47:23 -  이런 식으로 두 개가 웹브라우저에서 표현되는 걸로 봤을 때는
47:23 ~ 47:26 -  똑같이 표현이 된다는 거죠.
47:26 ~ 47:30 -  근데 얘는 그냥 눈에 보이는 것만 생각하면
47:30 ~ 47:42 -  때문에 이게 어떤 리스트의 아이템으로서 요거하고 요거의 데이터가 이 리스트에 속한다라는 그런 것들을 가지고 있지 않고 그냥 텍스트들로 쭉 연결이 돼 있어가지고
47:42 ~ 47:51 -  이거는 나중에 분석하거나 이럴 때 굉장히 좋지 않다라는 거죠. 뭔가 이렇게 구조적으로 이렇게 되어 있으면
47:51 ~ 47:54 -  아 리스트 중에 얘네들 리스트 아이템이 두 개 있구나. 그리고 뭐하고 뭐구나
47:54 ~ 48:00 -  할 수 있는데 얘는 그냥 텍스트로 되어 있으니까 이게 뭐 리스트의 아이템인지
48:00 ~ 48:06 -  그냥 꾸며 주는 건지 메뉴인지 알 수가 없다는 거죠
48:06 ~ 48:15 -  자 이런게 있을 수 있구요 그 다음에 버튼하고 div 어 요즘 웹페이지를 보면 전부 다 div죠
48:15 ~ 48:24 -  구역을 나눠 놓고 이 구역 이 구역 해가지고 쓰는 뭐 이런 형태로 되어 있습니다.
48:24 ~ 48:30 -  물론 이제 아주 나쁜 것은 아니라고 생각은 하는데 어쨌든 버튼 같은
48:30 ~ 48:36 -  경우를 구현을 할 때도 그냥 div 로 만드는 경우도 있거든요. 저도 저렇게 만드는 경우 있습니다.
48:36 ~ 48:46 -  그래서 그냥 div 에다가 그 css 로 꾸며 가지고 마치 버튼인 것처럼 만들고 거기에다가 자바스크립트로 그걸 눌렀을 때 어떤 하는 일을
48:46 ~ 48:52 -  정의하고 이렇게 쓰는 경우도 있는데 이런 식으로 그냥 단순하게 div로 쓰는 것보다는
48:52 ~ 48:55 -  뭔가 버튼의 역할을 수행한다고 했을 때는
48:55 ~ 48:59 -  그때는 버튼, div 대신에 버튼을 쓰는 것이 좋겠습니다.
49:00 ~ 49:07 -  그 다음에 또 버튼하고 앵커 그러니까 아까 하이퍼링크 A태그 얘기했었죠.
49:07 ~ 49:15 -  그래서 버튼하고 A태그인 경우에도 뭔가를 눌러 가지고 뭘 처리하는 거다 그러면 버튼이 맞을 거고요.
49:15 ~ 49:21 -  만약에 눌러 가지고 다른 데로 연결이 된다. 다른 문서로 만약에 옮겨간다.
49:21 ~ 49:25 -  하이퍼링 그 기능을 갖고 있다라고 했을 경우에는 A를 쓰는 게 맞겠죠.
49:25 ~ 49:30 -  우리가 원래 태그의 의미대로 써라 라는 거라고 여러분들이
49:30 ~ 49:35 -  이해하시면 되겠고요. 그 다음에 이태릭체로 강조하기 위해서
49:35 ~ 49:40 -  i라고 하는 태그를 여태까지 많이 썼는데 이제 그 Semantic 태그로
49:40 ~ 49:45 -  em이 Emphasized라는 거죠. 그러니까 강조된 이라고 하는 의미로
49:45 ~ 49:50 -  em이라고 하는 태그를 제공을 하고 있는 거죠. 그래서
49:50 ~ 49:52 -  i 태그, em 태그 전부 다 똑같이
49:52 ~ 49:54 -  이탈릭체로 표현이 되고요.
49:54 ~ 49:56 -  그 다음에 유사한 게 또 뭐 있냐면
49:56 ~ 50:00 -  strong이라는 태그랑 b라고 하는, b는 bold입니다.
50:00 ~ 50:02 -  그러니까 굵게 나타내는 거죠.
50:03 ~ 50:05 -  마찬가지로 Strong도 굵게 나타내 주거든요.
50:06 ~ 50:09 -  그래서 Bold하고 Strong이 있고
50:09 ~ 50:12 -  Eye하고 E, M이 눈으로 보기에는 똑같다는 거죠.
50:12 ~ 50:13 -  각각.
50:13 ~ 50:15 -  근데 그럼 뭐가 다르냐?
50:15 ~ 50:16 -  라고 했을 경우에는
50:16 ~ 50:19 -  아까 Accessibility 할 때
50:19 ~ 50:22 -  화면 리더기가 인식하기에 좋다고 했죠.
50:22 ~ 50:26 -  그러니까 여기에 strong이라고 하는 게 되어 있다라고 하면은요.
50:26 ~ 50:30 -  화면 리더기가 예를 들면 이거를 좀
50:30 ~ 50:35 -  강하게 읽어 줄 수도 있겠죠. strong이 강하다는 거니까 얘는 좀 강조해서 읽어주고요.
50:35 ~ 50:40 -  뭐 이런 식으로 화면 리더기 구현에 따라서 달라질 수도 있겠지만
50:40 ~ 50:45 -  어쨌든 그런 것들이 그 시멘틱 태그들을 의미가 있는 태그들을
50:45 ~ 50:50 -  생활하게 되면은 이런 것들이 가능하게 된다는 거죠. 얘네들 그냥 화면에
50:50 ~ 50:52 -  단순하게 화면에 이틀렉트를 표시하고 굵게 표시하고 이런 것보다는하게 된다는 거죠. 얘네들은 그냥 화면에 단순하게 화면에 이틀렉트로 표시하고
50:52 ~ 50:54 -  굵게 표시하고 이런 것보다는
50:54 ~ 50:57 -  아, 이건 좀 뭔가 강조하는 의미야 라고
50:57 ~ 51:00 -  얘는 뭐 강조하는 거 얘는 좀
51:00 ~ 51:08 -  강하게 강조하는 의미 이렇게 쓰는 것이 조금 더 좋겠다는 겁니다.
51:08 ~ 51:12 -  그 다음에 웹페이지 구조라고 하는 것이 있는데요.
51:12 ~ 51:16 -  이것도 시멘틱 태그들의 하나인데
51:16 ~ 51:26 -  헤더, 메인, 푸터, 중요한 부분은 메인 이렇게 나타내고
51:26 ~ 51:30 -  그 다음에 내비게이션 요즘
51:30 ~ 51:41 -  요즘 홈페이지를 보면 위에 이렇게 링크들 연결하는 거 있죠? 그런게 이제 내비게이션이 되겠고 그 다음에 옆에 뭐 광고가 뜬다든지 그럴 때
51:41 ~ 51:49 -  aside 이런거 쓸 수 있구요 이런 것들을 가지고 구조를 만들 수 있다는 거죠 근데 한가지 여러분들이 주의하셔야 되는게
51:49 ~ 51:52 -  뭐냐면은 자 이걸 했다고 해서 헤더는 반드시 위에
51:53 ~ 51:55 -  물론 일반적으로 그렇게 될 것 같긴 한데요.
51:55 ~ 52:00 -  헤더라고 하면은 위에 나타나고 후터라고 하면은 밑에 나타나고
52:00 ~ 52:05 -  뭐 어사이드 라고 하면은 오른쪽에 나타나고 이렇게 생각하실 수 있는데
52:05 ~ 52:08 -  그게 아니라는 거죠. 이거는 시멘틱 태그니까
52:08 ~ 52:15 -  어떤 이 태그, 여기 데이터가 어디에 속하는지를 보여주는 거지
52:15 ~ 52:21 -  이걸 가지고 화면에다가 뭐 이거는 어사이드 했다고 그래서 오른쪽에 보여주고
52:21 ~ 52:26 -  그렇게 출력이 어떻게 되는지 이거를 결정하는 것은 아니다 라는 거를
52:26 ~ 52:30 -  여러분들이 좀 생각을 해 주시면 좋을 것 같고요
52:30 ~ 52:37 -  섹션하고 아티클이라고 하는 태그가 있는데 일반적으로는 예를 들면 무슨 경제 섹션이다
52:37 ~ 52:42 -  신문에 보면 경제 섹션이 있다 그럼 거기에 기사들이 그 안에 이렇게 들어 있겠죠
52:42 ~ 52:53 -  뭐 그런 식으로 섹션이 있고 주제별 어떤 그룹이 있고 거기에 그 기사나 아니면 블로그 포스트 같은 것들이 들어갈 수 있는 이런 구조로 되어 있겠죠
52:53 ~ 52:56 -  근데 이게 또 보면은 반드시 또 그렇지도 않은 게
52:56 ~ 53:00 -  아티클 안에 또 섹션이 들어가는 경우는
53:01 ~ 53:11 -  그래서 그냥 여러분들께서 정답이 있는 게 아니고 이거는 의미론적으로 이런 태그를 쓴다라는 거 정도로 여러분들이 생각을 하시면 좋을 것 같습니다.
53:13 ~ 53:22 -  자 그래서 2장에서 개발 환경 구축에서 사용했던 구름 아이디를 사용을 해가지고 다시 한번 구름 아이디에 그
53:22 ~ 53:30 -  id2.gurum.io 접속하셔가지고 거기에 로그인을 하시구요. 그러면 거기에 만들어 놓은
53:30 ~ 53:37 -  컨테이너가 있을텐데 거기서 실행을 눌러주시면 자 이런식으로 실행이 될 겁니다
53:38 ~ 53:44 -  자 그래서 기존에 했던거 실행하는거 해보면 지난 시간에 만들었던게 그냥 실행이 되겠죠
53:44 ~ 53:57 -  success 해가지고 실행이 될 텐데요 그 부분 index.html 파일이라고 하는 것을 더블클릭해서 이 부분을 좀 바꿔보자는 겁니다.
53:57 ~ 54:00 -  그래서 제일 처음에 바꿨던 부분은 이 부분입니다.
54:00 ~ 54:01 -  4라인이죠.
54:01 ~ 54:03 -  title을 집어 넣었더니
54:03 ~ 54:06 -  변경 전에는 이렇게 나타났었는데
54:06 ~ 54:09 -  변경 후에는 이 부분이 바뀌는 거가
54:09 ~ 54:13 -  title이구나 라는 것을 알게 된다 라는 거죠.
54:13 ~ 54:19 -  그래서 이런 식으로 바꿔보면 되겠습니다.
54:19 ~ 54:20 -  자 한번 해��면요
54:20 ~ 54:29 -  자 여기 콜렙이 있으니까 콜렙 따라서 여러분들 똑같이 하시면 되겠죠
54:30 ~ 54:40 -  자 요 부분 요 부분이 타이틀 요 부분이라고 보시면 되겠는데요 자 이 부분을 반영을 하면 되는데 여기에 헤드 이 위에 부분에 지금 먼저 테스트를
54:40 ~ 54:46 -  해보는게 좋겠죠 그래서 프로젝트에 가서 여기가 있나요 여기 있으니까
54:46 ~ 54:51 -  자 새로고침 했는데 자 이런식으로 석세스 느낌표 이렇게 뜨게 되는 거죠.
54:51 ~ 54:54 -  자 그래서 이 부분이고요.
54:54 ~ 54:58 -  중요한 거는 이 윗부분인데 이게 지금 화면을 벗어나 있네요.
54:58 ~ 55:00 -  그러니까 이 부분에
55:00 ~ 55:03 -  여기에 이렇게 변경 전에는 이렇게 표시가 되어 있는데
55:03 ~ 55:11 -  이 부분을 바꾸니까 그 부분이 변경이 되더라 라는 겁니다.
55:12 ~ 55:18 -  자 이 부분 여기다가 타이틀 해가지고요.
55:18 ~ 55:20 -  자 이런 식으로 그냥 쓰면 됩니다.
55:20 ~ 55:23 -  지금 제가 여기서 타이틀 해가지고 이거를. 이런 식으로 쓰면 됩니다. 지금 제가 여기서 title 해가지고
55:23 ~ 55:25 -  이거를 시작 태그라고 하는데
55:25 ~ 55:30 -  앞으로 배울 거니까요. 일단은 그냥 따라서 해 보십시오.
55:30 ~ 55:40 -  이렇게 해가지고 꺽쇠를 닫는 꺽쇠를 하니까 이런 식으로 뭔가 이거랑 똑같이 생겼는데 중간에 슬래시 들어간 게 이렇게 하나 만들어진 걸 볼 수가 있겠죠.
55:41 ~ 55:43 -  자 이거를 시작 태그라고 부르고요.
55:43 ~ 55:49 -  이렇게 꺽쇠로 시작하는 거 그 다음에 꺽쇠 슬래시로 시작하는 거를 종료 태그라고 부릅니다.
55:49 ~ 55:55 -  그래서 그 사이에다가 이 시작 태그하고 종료 태그 사이에다가 데이터를 쓰는 거예요.
55:55 ~ 55:59 -  그러니까 제가 마컵이라고 하는 게 실제 데이터가 있고 그거를 꾸며주고
56:00 ~ 56:03 -  것들이 있다라고 했는데 이 타이틀 이라고 하는 것이 꾸며 주는 거구요
56:03 ~ 56:08 -  마크업 마킹 한거구요 여기에 이제 실제로 들어갈 이 웹
56:08 ~ 56:12 -  즉 아니구요 왜 프로그램이
56:13 ~ 56:16 -  이 부분이 실제 데이터가 되는 거죠 이 부분을 저 컨텐츠 라고 부르는데
56:16 ~ 56:20 -  내용 이라고 부르는데 실제 내용이 있는 거고
56:20 ~ 56:24 -  이거를 꾸며 주는 부분이 이렇게 들어가게 된다는 거죠
56:24 ~ 56:30 -  이거를 마킹한다 그래서 마크업 랭기지다 마크업을 이렇게 달아준다
56:30 ~ 56:35 -  이 웹프로그래밍이라고 하는 건 title이야 라고 알려주는 거죠
56:35 ~ 56:43 -  자 이렇게 하고 여기서 리로드 해보면은 바뀐거는 뭐 알 수가 없겠네요
56:43 ~ 56:50 -  자 그런 다음에 요 부분을 조금 더 변경을 해 보려는 거죠 자 이거는 그냥 여기 캡쳐 된 걸로 보시면 되겠구요
56:50 ~ 56:50 -  title이라고 쓴 부분이 여기에 변경되는거 보려는 거죠. 자 이거는 그냥 여기 캡쳐된 걸로 보시면 되겠고요.
56:50 ~ 56:54 -  여기 title이라고 쓴 부분이 여기에 변경되는 거 보시면 되겠고요.
56:54 ~ 57:00 -  그 다음에 구조를 위한 semantic 태그라고 하는 것들이 있는데
57:00 ~ 57:08 -  아까 그 헤더라든지 이런 부분들이 있죠? 그 부분인데 이 부분은 좀 내용이 많으니까
57:08 ~ 57:13 -  콜랩을 활용을 해보도록 하죠
57:14 ~ 57:30 -  이 부분을 Ctrl A, Ctrl C 하신 다음에 여기다가 Ctrl A,� v 해서 이렇게 집어 넣으시구요 컨트롤 s 로 저장해 보시죠 인덱스.html 에 그런 다음에
57:30 ~ 57:37 -  결과를 보시면 이런식으로 표시가 되는 것을 여러분들이 확인하실 수가 있을 겁니다
57:37 ~ 57:46 -  연결해서 지금 되는 것은 아니구요 강의 홈페이지는 여기에 보시면 지금 제가 footer 라고 하는 곳에다가 강의 홈페이지를
57:46 ~ 58:00 -  그 블로그를 연결해 놨죠 그러니까 여기서 이걸 누르면 은 이렇게 블로그 연결되는 것을 확인하실 수가 있을 겁니다 게시판으로 어 그래서 어 이런식으로
58:00 ~ 58:05 -  이렇게 분리가 되서 이렇게 나타나기는 했는데 아까 제가 말씀드린대로 이게
58:05 ~ 58:10 -  semantic 태그라고 하는 것이 얘를 얘를 aside 내용인데요
58:10 ~ 58:14 -  aside라고 했다고 해서 얘가 자동으로 여기다 이쪽에 표시해 준다던지
58:14 ~ 58:19 -  오른쪽에 표시한다던지 왼쪽에 표시한다던지 그런 것은 아니다 의미론적인
58:19 ~ 58:23 -  거다 라는 것을 여러분들이 조금 생각을 하셨으면 좋을 것 같습니다
58:23 ~ 58:30 -  자 이렇게 표시가 되는 거죠 자 요약을 해보면은요
58:30 ~ 58:38 -  HTML하고 그 다음에 HTML, CSS, 그 다음에 JavaScript가 서로 역할 분담을 하고 있다는 거예요.
58:38 ~ 58:47 -  그래서 HTML은 실제 데이터를 저장하는 역할을 하고 CSS에서는 표현 방법을 저장을 하고 있고요.
58:47 ~ 58:53 -  JavaScript에서는 뭔가 실행이 필요한 부분을 담당을 하고 있다 라고 보시면 되겠죠
58:53 ~ 58:59 -  자 그 다음에 HTML을 작성하실 때는 세 개가 다 연관되는 내용이긴 한데
59:00 ~ 59:09 -  어쨌든 SEO 그러니까 검색엔진 노출을 위해서 조금 노력할 필요가 있다고 하면 신경써야 된다는 거고요.
59:09 ~ 59:24 -  그 다음에 Accessibility 이것도 우리가 놓치기 쉬운데 더 많은 사용자들 특히 몸이 불편하신 분들 이런 분들을 위해서는 이런 거를 좀 고려해 가지고 가면 좋겠다라는 거죠.
59:25 ~ 59:30 -  저 같은 경우도 색약이 있으니까
59:30 ~ 59:37 -  상당히 불편할 때가 있습니다. 색깔 배치나 이런 것들이 세계학자들이 잘 안 보이는 배치가 있을 수가 있거든요.
59:37 ~ 59:41 -  그러니까 그런 것들을 신경 써주면 더 좋겠죠.
59:42 ~ 59:46 -  그 다음에 시멘틱 태그라고 하는 것에 대해서 설명을 드렸었는데
59:46 ~ 59:52 -  어떤 의미에 맞는 태그를 사용하는 것이 액세서빌리티나 아니면 SEO에 좋겠다.
59:53 ~ 59:54 -  검색에 최적화에 좋겠다.
59:55 ~ 59:56 -  라고 말씀을 드렸었죠.
59:56 ~ 59:58 -  장시간 동안 고생 많으셨습니다.
59:58 ~ 59:59 -  강의는 여기서 마치겠습니다.
60:00 ~ 60:01 -  Thank you.
