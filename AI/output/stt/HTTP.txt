00:00 ~ 00:14 -  안녕하세요. 웹프로그래밍 강의입니다.
00:14 ~ 00:17 -  이번 시간에는 첫 시간인데요.
00:17 ~ 00:23 -  HTTP라고 하는 것이 뭔지에 대해서 살펴보고요. 그 다음에 웹프로그래밍 개지에 대해서 살펴보고요.
00:23 ~ 00:30 -  그 다음에 웹프로그래밍 개요에 대해서 배우는 시간을 갖도록 하겠습니다.
00:30 ~ 00:38 -  이번 시간에는 그냥 가볍게 단어들이나 이런 것들을 여러분들이 좀 익히신다 생각을 하면 될 것 같고요.
00:38 ~ 00:45 -  뭘 외우면 좋기는 하겠지만 그렇게 외울 필요까지는 없을 거라고 생각이 되고
00:45 ~ 00:52 -  오늘 들었던 내용들이 그런 단어들이 앞으로 계속 강의 내내 사용이 되기 때문에
00:52 ~ 00:54 -  그때 조금 천천히 익혀 줄 텝니다
00:54 ~ 01:00 -  그래서 여러분들께서 조금 이번 강의는 그냥 좀 처음이니까
01:00 ~ 01:03 -  쉬어간다? 처음에는 좀 슬로우 스타트라고 할까요?
01:03 ~ 01:07 -  좀 천천히 출발하는, 그래서 마음을 조금 느긋하게 먹고
01:07 ~ 01:11 -  강의를 들어보시기를 원하겠습니다.
01:16 ~ 01:21 -  강의 개요인데요. 강의 홈페이지는 여기 말씀드린대로
01:21 ~ 01:25 -  bwh.github.io 가셔가지고요.
01:25 ~ 01:30 -  거기 카테고리즈 보시면 거기에 동영상 강의에 보면
01:30 ~ 01:36 -  있습니다 그래서 그 게시판을 여러분들이 앞으로 보시면 되겠습니다
01:36 ~ 01:44 -  단축 주소 여기 나와 있죠 그러니까 위에 있는 이거랑 똑같은 겁니다 여기 여기 이거랑 똑같은 거니까요
01:44 ~ 01:52 -  url.kr lbur4f 라고 하는 이쪽으로 들어가시게 되면
01:52 ~ 01:55 -  여기로 연결이 될 겁니다
01:55 ~ 01:58 -  자 이번 강의에서 얘기하려고 하는 웹프로그래밍이라고 하는 것은
01:58 ~ 02:00 -  컴퓨터공학과
02:00 ~ 02:10 -  2학년 1학기에 위치하고 있습니다. 그래서 2학년이다 라고 하는 것이 컴퓨터공학과의 2학년이다 라고 하면은 저희 과에서는
02:10 ~ 02:23 -  저희 학교에 저희 과에서는 그렇게 많은 컴퓨터 전공 지식을 가지고 있지 않다 라고 생각을 하고 제가 강의를 진행을 할 겁니다.
02:23 ~ 02:30 -  그러니까 여러분들께서 별다른 지식이 없고 또는 뭐 어떤 선수 과목을 듣지 않았다
02:30 ~ 02:44 -  하더라도 아니면은 아마 다른 학과 학생들께서도 타전공에서도 컴퓨터공학 전공이 아닌 분들도 들으시는데 그렇게 크게 무리는 없을 거라고 생각합니다.
02:45 ~ 02:56 -  물론 기본적인 프로그래밍 언어에 대해서 한번 해본 적이 있다든지 아니면 알고 있다 이러면 굉장히 도움이 많이 되겠죠
02:56 ~ 03:00 -  예를 들면 이런 겁니다. 이런 제어문 이라든지 변수라든지
03:00 ~ 03:09 -  함수 이런거를 들어본 적이 있다 라는 그러면은 이번 강의는 굉장히 수월하게 들으실 수 있을 거라고 생각이 되구요
03:09 ~ 03:17 -  만약에 그런 것들을 이게 도대체 뭐냐 제어 문 뭐 제어하는 건가 엘리베이터 누르면 올라오는 건가
03:17 ~ 03:24 -  뭐 이렇게 생각하실 수 있겠죠 뭐 엔트리라든지 이런 거 써 보셨으면
03:24 ~ 03:27 -  좀 쉽게 아실 것 같기는 한데
03:27 ~ 03:30 -  아무튼 프로그래밍 언어에 대해서
03:30 ~ 03:37 -  전혀 기초 지식이 없더라도 그냥 하나씩 하나씩 여러분들이 그냥 잘 몰라도 그냥 듣구요
03:37 ~ 03:44 -  계속 그냥 듣고 눈으로 보고 그 다음에 중요한 것은 여러분이 직접 프로그래밍 해봐야 됩니다
03:44 ~ 03:55 -  여러분들께서 만약에 음 운전면허 따는 그런 동영상 유튜브를 본다 라고 하면은 그거 뭐 백날 본다고 그래갖고 내가 운전 잘할 수 있게 되는 거 절대 아니겠죠
03:55 ~ 04:00 -  피아노 레슨 유튜브를 본다 그러면 그냥
04:00 ~ 04:04 -  가만히 눈으로 본다고 여러분들이 그걸 할 수 있게 되는 것은 아닙니다.
04:05 ~ 04:09 -  여러분이 필요한 것은 지금 당장 뭘 아는 것이 필요한 게 아니고요.
04:10 ~ 04:11 -  앞으로가 문제입니다.
04:11 ~ 04:15 -  그래서 여러분들께서 지금은 모르더라도 상관이 없어요.
04:15 ~ 04:21 -  여러분들이 대학생이든 아니든 어린 학생들이든 연세가 많으신 분이든
04:21 ~ 04:24 -  컴퓨터 공학과든 아니든 전혀 필요가 없고요
04:24 ~ 04:27 -  앞으로 여러분들이 어떻게 하느냐에 따라서
04:27 ~ 04:30 -  이 웹프로그래밍을 잘 할 거냐 말 거냐
04:30 ~ 04:35 -  결정이 된다는 겁니다. 웹 프로그래밍이 많이 지금 사용이
04:35 ~ 04:40 -  되고 있는데요. 그 이유, 그러니까 뭔가 컴퓨터공학 전공 분야에서
04:40 ~ 04:45 -  뭔가 많이 사용을 한다는 것은 물론 꼭 그런 건 아닐 수도
04:45 ~ 04:50 -  있겠지만 일반적으로는요. 쉬우니까 많이
04:50 ~ 04:50 -  사용이 되는 겁니다
04:50 ~ 04:54 -  만약에 진입장벽이 굉장히 높고
04:54 ~ 04:56 -  그게 좀 힘들다
04:56 ~ 04:58 -  배우기 힘들다 그러면은
04:58 ~ 05:00 -  좀 배우는 거를
05:00 ~ 05:04 -  기피하게 되고 잘 사용이 안 되는 그런 경향이 많고요.
05:04 ~ 05:10 -  뭔가 많이 사용이 된다고 하면 그거는 일반적으로는 좀 쉬운 것들이 많다는 거죠.
05:11 ~ 05:16 -  예를 들면 여러분들이 어렵게 생각하실 수 있는 물론 어렵지만요.
05:16 ~ 05:19 -  예를 들면 머신러닝, 딥러닝 이런 얘기 들어보셨을 텐데
05:19 ~ 05:25 -  그런 것들이 물론 이론적인 배경이나 이런 거를 익히는 데는
05:25 ~ 05:29 -  좀 수학적인 백그라운드도 필요하고 많이 힘들 수 있습니다.
05:29 ~ 05:30 -  근데
05:30 ~ 05:41 -  예를 들어서 이미지를 강아지 이미지 하고, 흔히 얘기하는 거 있죠. 고양이 이미지 하고, 이런 것들이 이미지를 내가 가지고 있다 라고 했으면은
05:41 ~ 05:48 -  그런거 그냥 학습시키고 이러는 것은 이미 만들어져 있는 툴을 사용하는 개념이기 때문에
05:48 ~ 05:55 -  그렇게 어렵지 않게 여러분들이 하실 수 있습니다. 필기체인식이라든지 이런 것들은 여러분들이 쉽게 할 수 있는
05:55 ~ 06:00 -  그런 좋은 툴들이 많이 마련이 되어 있습니다.
06:00 ~ 06:04 -  그런 것도 한번 도전해 보시면 좋겠죠
06:04 ~ 06:06 -  그러니까 하고 싶은 얘기는 이겁니다
06:06 ~ 06:09 -  여러분들이 겁내지 마시고
06:09 ~ 06:13 -  그냥 계속 나와 있는 강의하는 거를
06:13 ~ 06:15 -  이번 시간에는 실습하는 게 없겠지만
06:15 ~ 06:18 -  앞으로 실습한 내용이 있다라고 하면
06:18 ~ 06:22 -  그거를 한번 제가 하는 것을 보시고요
06:22 ~ 06:30 -  그 다음에 직접 그때 같이 따라 하셔도 되고 아니면 멈춰 놓고 제가 했던 내용을
06:30 ~ 06:39 -  머릿속에서 기억을 해가지고 아 여기서 이렇게 했었나 하고 잘 모르겠으면 다시 동영상을 보고 해가지고 여러분들이 따라 하시다 보면은 굉장히
06:39 ~ 06:47 -  어 이 강의가 끝났을 때 여러분들이 놀랄 정도로 프로그래밍 실력이 향상돼 있을 거라고 생각합니다
06:47 ~ 06:52 -  그래서 간혹 가다가 전공 공부 어떻게 해야 되냐고 물어보는 학생들이 있으면 제가 맨날 그렇게 얘기하거든요.
06:52 ~ 06:56 -  그냥 쉬운 거를 많이 프로그래밍 해봐라.
06:56 ~ 06:59 -  했던 거 또 하고 또 하고 또 하고 해가지고 완전히 익힐 때까지 내게
07:00 ~ 07:08 -  될 것 같을 때까지 해봐라 그럽니다 예를 들어서 음 자동차 운전을 우리가 배운다 라고 하면은
07:08 ~ 07:17 -  좀 새로운 어려운 길을 처음부터 고속도로 가면 얼마나 무섭겠어요 너무 무섭죠 그죠 뭐 차도 쌩쌩 달리는데 그리고 조금만 실수를 해도 큰 사고로
07:17 ~ 07:21 -  이어질 수 있으니까 그 긴장감이라고 하는 것은 이루 말할 수 없습니다.
07:22 ~ 07:25 -  그래서 운전 연습할 때나 이럴 때도
07:25 ~ 07:28 -  좀 쉬운 길이죠. 매일 내가 다니는 길
07:28 ~ 07:29 -  처음에 굉장히 짱이에요.
07:30 ~ 07:34 -  짧은 구간 이런 데를 여러분들이 반복적으로 하다가 보면
07:34 ~ 07:36 -  이제 그걸 조금씩 넓혀나가고
07:36 ~ 07:39 -  맨날 다니는 길에서 조금 한 번 옆으로 돌아보기도 하고
07:39 ~ 07:44 -  이런 식으로 하시는 것이 훨씬 효과적이라고 저는 믿고 있습니다.
07:44 ~ 07:46 -  제가 공부할 때도 그렇게 했었고요.
07:47 ~ 07:54 -  그래서 앞으로 여러분들께서 진짜로 해보기를 원하신다 라고 하면은
07:54 ~ 08:00 -  좀 이런식으로 반복해 가지고 한번 했다 그러고 한번 완성했다 그러고
08:00 ~ 08:08 -  이렇게 생각하지 마시고 동영상 강의를 끄고 아니면 멈춰 놓고 처음부터 끝까지 여러분이 직접 한번 해보시기 바랍니다
08:08 ~ 08:14 -  그게 굉장히 도움이 될 거라고 생각합니다 그러다 보면 분명히 알고 있다고 생각했는데 막히는 구간이 나올 수 있거든요
08:14 ~ 08:30 -  그럼 그때 이제 소스 코드를 본다든지 제가 일반적으로 이제 콜렙 같은걸 써가지고 구글 콜렙에 그 소스코드나 게시판에다가 강의 홈페이지에 올려놓을테니까 그걸 보시면서
08:30 ~ 08:34 -  여러분들이 하시면 좋을 거라고 생각이 됩니다
08:34 ~ 08:41 -  자 그래서 이번 강의의 범위는 한정되어 있거든요
08:41 ~ 08:46 -  한정되어 있는데 웹프로그래밍이라고 하는 것이 굉장히 광범위합니다
08:46 ~ 08:53 -  그래서 제가 제한된 시간 안에 모든 기술을 다 다루는 것은 힘들 거라고
08:53 ~ 09:00 -  제가 다 알지도 못하고요. 모든 기술을 다 다루는 것은 힘들 거라고 생각이 되고
09:00 ~ 09:04 -  아주 기초적인 것, 그 다음에 많이 사용이 되는 것, 이런 것들을
09:04 ~ 09:08 -  여러분들한테 지금 2022년인데요.
09:08 ~ 09:11 -  이 시점에서 말씀을 드리도록 그렇게 할 겁니다.
09:11 ~ 09:17 -  근데 이게 또 이 웹프로그래밍은 유행이 계속 변해가지고요.
09:17 ~ 09:19 -  굉장히 따라잡기가 힘든 분야 중에 하나입니다.
09:19 ~ 09:27 -  컴퓨터공학과가 원래 그렇기는 한데 이 웹프로그래밍도 많이 사용을 하다 보니까 그런 것들이 굉장히 심하게 되죠.
09:30 ~ 09:36 -  그래도 기본적으로 많은 사람들이 쓰는 것들이 있기는 합니다.
09:36 ~ 09:45 -  근데 여기서 제가 고른 그런 그 예를 들면 여기에 리액트라든지 익스프레스라든지 이런거는 일부라고 여러분들이 생각을 해주시면 될 것 같구요.
09:45 ~ 09:56 -  기본적으로는 뭐 html 그 다음에 css 그 다음에 자바스크립트 이런 것들은 일반적으로 굉장히 많이 사용이 되고 있으니까
09:56 ~ 10:00 -  여기서도 javascript, typescript 이런 것들도
10:00 ~ 10:07 -  요즘에 많이 또 쓰고 있고 하니까요 그런 것들이 어 좀 유행을 많이 따라간다
10:07 ~ 10:14 -  그래서 여러분들이 동영상 강의 나 뭐 이런 것들 유튜브 나 이런 데서 쉽게 보실 수 있을텐데
10:14 ~ 10:18 -  어 물론 이제 그런 기초적인 것은 변하지 않습니다 그래서 그런 것들은 보셔도 좋은데
10:18 ~ 10:22 -  만약에 지금 2022년이라고 말씀드렸는데
10:22 ~ 10:30 -  이걸 보시는 분께서 한 2년 3년이 지났다 라고 하면은 조금 더 최신 버전의 어떤 그런
10:30 ~ 10:35 -  내용을 좀 찾아 보시는 게 좋지 않을까 굉장히 빨리 변하니까요
10:35 ~ 10:39 -  그런 것들을 좀 여러분들이 고려를 하시면은 좋을 거라고 생각이 됩니다
10:39 ~ 10:44 -  그래서 HTML, CSS, JavaScript가 기본이 될 거고요
10:44 ~ 10:49 -  그 외에 Node.js 라든지 그 다음에 React, Express 이런 것들을
10:49 ~ 10:50 -  이것만으로도 굉장히 많거든요
10:50 ~ 10:57 -  근데 대표적으로 이런 Front��트엔드 백엔드에 대해서 이런 쪽으로 한번 살펴보도록 하겠습니다.
11:00 ~ 11:11 -  자 저도 역사 그렇게 좋아하지는 않는데요 그냥 흘려서 들으시기 바랍니다 이게 음 대충 한 1969년 이니까 대충 한 1970년 정도로 생각을 하시면
11:11 ~ 11:19 -  되겠죠 1970년 제가 1970년 생 인데요 어 그래서 뭐 그때 이제 제가 태어났을 때
11:19 ~ 11:21 -  정도 제 인생하고 비슷하게
11:21 ~ 11:24 -  이게 흘러갔다고 보시면 될 것 같은데
11:25 ~ 11:28 -  아르파넷이라고 아르파라고 하는 게 있죠. 아르파
11:28 ~ 11:30 -  그래서 미 국방부
11:30 ~ 11:38 -  어 여러분들 뭐 gps 라든지 그 위치 추적하기 위한 gps 라든지 이런 것 전부다 국방부 미국 국방부 3
11:38 ~ 11:48 -  국방부에서 했던 거죠 그래서 어 여기서도 최초 네트워크인 아르파 라고 하는 것이 1969년 그 전부터 어 있긴 있었는데 아르파 라는
11:48 ~ 11:52 -  조직이 어 그때 이제 69년도에 나온 것 같고요
11:52 ~ 11:56 -  저도 이번 강의 준비하느라고 조사한 겁니다
11:56 ~ 12:00 -  그래서 아르파를 연결해 가지고 아르파넷이라고 하는
12:00 ~ 12:06 -  이런걸 구성을 했다고 그러고요 이게 나중에 인터넷으로 발전을 했다고 합니다
12:06 ~ 12:16 -  그러니까 여러분들께서 느끼시기에 여러분들 아마도 많은 이걸 듣고 계시는 분들의 많은 분들은 태어나기 전이실 거라고 생각이 되니까
12:16 ~ 12:28 -  굉장히 오래됐네 이렇게 생각하실 수 있을지 모르겠지만 글쎄요 그렇게 우리가 흔히 이렇게 일반적으로 많이 사용하고 있는 것을 봐서는
12:28 ~ 12:29 -  굉장히 역사적입니다
12:30 ~ 12:35 -  짧다고도 상대적인 거겠지만 저는 그렇게 생각이 됩니다
12:35 ~ 12:40 -  짧은 시간 동안 어마어마하게 발전을 많이 했다 이렇게 생각하셔도 되겠죠
12:40 ~ 12:49 -  그래서 이 때 이제 그 아르파 넷이 나오게 되면서 프로토콜 이라고 하는 단어를 사용하게 되는데요
12:49 ~ 12:53 -  통신을 위한 약속 또는 규약 이런 것들을 프로토콜이라고
12:54 ~ 12:55 -  얘기를 하게 되죠.
12:55 ~ 13:00 -  그래서 우리가 가장 많이 사용을 하게 될 HTTP
13:00 ~ 13:09 -  라고 하는거 하이퍼텍스트 트랜스포 프로토콜 이라고 하는 것이 어 이때 그 어 이때 나온 것은 아니구요
13:09 ~ 13:16 -  어이 프로토콜 이라고 하는게 우리가 제일 많이 쓸게 이건데 프로토콜 이란 단어가 이때 나왔고 이게 발전을 하면서
13:16 ~ 13:22 -  하이퍼텍스트 트랜스포 프로토콜이 나왔다 이렇게 하시면 되겠습니다 자 그 다음에 어 여기 하이퍼텍스트 트랜스퍼 프로토콜이 나왔다. 이렇게 생각하시면 되겠습니다.
13:25 ~ 13:26 -  자, 그 다음에 여기 하이퍼텍스트는 이거는
13:28 ~ 13:30 -  제가 위키백과 보니까 이걸 붙였었더라고요. 좀 고치겠습니다.
13:30 ~ 13:38 -  그래서 Hypertext Transfer Protocol, Hypertext를 전송하는 프로토콜
13:38 ~ 13:45 -  그래서 프로토콜이라고 하는 것이 여러분들이 이제 흔히 앞으로 듣게 되실 거라고 생각이 되는데
13:45 ~ 13:50 -  어떤 통신 규약이다. 그래서 이 규약이라고 하는 것은 뭔가 이렇게 딱 맞춰 놓은 거죠.
13:51 ~ 13:54 -  그러니까 그거에 벗어나면 안 된다라는 걸 얘기를 하는 겁니다.
13:55 ~ 14:00 -  자, 그다음에 초기에 이 아르파넷을 구성을 하고
14:00 ~ 14:10 -  초기에 가장 많이 사용됐던 사람들이 제일 많이 사용했던 것은 1971 년도에 개발된 이메일 우리 맨날 쓰는 이메일이 있죠
14:10 ~ 14:30 -  그 메일 그래서 원래는 데이터 주고받고 이렇게 하라고 했는데 사람들이 실제로 많이 쓴 것은 메일을 쓸 때 그 전우편, 잘 지냈니 하고 물론 요즘에는 파일 첨부해서 보내고 이런 것도 굉장히 흔하긴 하니까
14:30 ~ 14:39 -  공유가 되겠지만 어 다 업무적으로 뭐 내일 어디 가는 데 너 거기 있니 뭐 이런 그 메일들이 굉장히 많이 사용이 됐다 라는 거죠
14:39 ~ 14:46 -  원래 의도와는 다르게 어 이메일이 굉장히 많이 사용이 됐다 라고 했었습니다
14:46 ~ 14:52 -  자 이메일을 우리가 생각할 때 골뱅이 있죠? 골뱅이 우리나라에서 골뱅이라고 부르는
14:52 ~ 14:53 -  골뱅이 같이 생겼죠?
14:53 ~ 14:57 -  골뱅이 뭐 이렇게 동글동글하니까요
14:57 ~ 15:00 -  자 얘를 보면 여기 A자가 이렇게 들어있죠?
15:00 ~ 15:08 -  add sign 또는 add mark라고 부르게 됩니다. 그래서 예를 들면 이렇게 쭉 있을 때
15:08 ~ 15:19 -  abc 하고 골뱅이가 있고 gmail.com 이라고 만약에 되어 있다라고 하면은 읽을 때는 그냥 얘는 at이라고 있습니다. 그래서 abc at gmail.com
15:19 ~ 15:23 -  이런 식으로 읽을 때는 at이라고 읽는다는 거 알아두시면 좋겠습니다.
15:26 ~ 15:29 -  의미는 at이라고 하는 게 어디 어디에 있다 그런 뜻이죠.
15:30 ~ 15:34 -  어디 어디에 있는 이라고 하는 의미를 가지고 있습니다.
15:34 ~ 15:38 -  그래서 id 하고 메일 서버를 구분한다는 거죠.
15:38 ~ 15:44 -  abc app gmail.com 하면 gmail.com이 메일 서버가 될 거고요.
15:44 ~ 15:49 -  그 앞에 n마크 s 사인 앞에 있는 거
15:49 ~ 15:59 -  골뱅이 앞에 있는 abc가 id가 된다는 거죠. 그래서 어느 메일 서버에 있는 id다. 그래서 a 있는을 의미하게 된다는 거죠.
16:00 ~ 16:11 -  자 그리고 미국에서 이렇게 시작을 했구요 국내에서는 1982년 한 10년 정도 지났나요? 10 몇 년 지났나요?
16:11 ~ 16:20 -  그래서 서울대하고 금호공과대학교가 구미에 있는데요 그래서 이렇게 구미시라고 이렇게 썼습니다
16:20 ~ 16:22 -  뭐 제가 자부심을 가질 것은 아니지만요 어쨌든 서울대하고 구미시라고 이렇게 썼습니다 뭐 제가 자부심을 가질 거는 아니지만요
16:22 ~ 16:27 -  어쨌든 서울대하고 구미시 소재의 현재 그 애트리
16:27 ~ 16:30 -  여기도 제가 학교 오기 전에
16:30 ~ 16:41 -  어쨌든 에트리라고 하는 이름이 KIT 그때 뭐 이런 전자통신연구소 였는지 전자연구원이었는지
16:41 ~ 16:49 -  어쨌든 구미에 있는 서울대하고 구미에 있는 연구원하고 통신을 했다고 하는데요
16:49 ~ 16:51 -  나무위키 보고 제가 처음 알았는데
16:51 ~ 16:53 -  미국 다음으로 세계에서 두 번째
16:53 ~ 16:55 -  네트워크 통신이라고 하네요
16:55 ~ 16:59 -  어쨌든 우리나라도
17:00 ~ 17:03 -  굉장히 좀 뭐 요즘에 전 세계에서 가장 빠르다 하는데
17:03 ~ 17:08 -  실제로 순위 나온 거 보니까 1위는 아니었던 것 같긴 한데
17:08 ~ 17:09 -  아무튼 우리나라 굉장히 빠르죠.
17:10 ~ 17:13 -  그 다음에 좀 나라가 작아서 그런지는 모르겠지만
17:13 ~ 17:17 -  그 인프라가 굉장히 잘 갖춰져 있죠. 우리나라 같은 경우에.
17:19 ~ 17:24 -  자부심을 가져도 될 것 같습니다. 통신상국으로.
17:24 ~ 17:30 -  자, 그게 이제 전체적인 역사를 말씀드렸던 거고 실제로 제가
17:30 ~ 17:35 -  느꼈던 제가 경험했던 것들을 말씀드리게 되면은
17:35 ~ 17:38 -  제가 이게 90년인지 91년인지 모르겠는데
17:38 ~ 17:42 -  제가 1학년 대학교 1학년 2학년 때
17:42 ~ 17:46 -  2학년 3학년 1학년 때는 아니었던 거 같고요
17:46 ~ 17:49 -  2학년인지 3학년인지
17:49 ~ 17:51 -  시리얼 통신을 했던 게 기억이 납니다.
17:51 ~ 17:54 -  그래서 그 당시에는 시리얼 통신을 할 수도 있었고
17:54 ~ 17:57 -  그다음에 패럴렐 통신을 할 수도 있었어요.
17:57 ~ 18:00 -  메인보드에 보면 지금 보면
18:00 ~ 18:09 -  usb 포트 들만 잔뜩 들어가 있는데 어 그 다음에 이제 뭐 비디오 어 hdmi 라든지 이런 것들 들어가 있고 하는데 그 당시에는 여기
18:09 ~ 18:18 -  시리얼 보트 하고 패럴랄 보트가 있었어요 그래서 시리얼 보트는 이런 그 통신 뭐 컴퓨터 끼리 통신하는 것도
18:18 ~ 18:23 -  가능하지만 컴퓨터 대 컴퓨터가 아니고 컴퓨터 대 장치 같은 걸 통신하기 위해서
18:23 ~ 18:28 -  이런 RS-231C 포트 연결할 수 있는 게 붙어 있었고요.
18:28 ~ 18:29 -  그 다음에 프린터를 연결하고
18:30 ~ 18:39 -  패럴렐 포트는 USB로 연결을 합니다.
18:39 ~ 18:44 -  시리얼 통신은 시리얼은 비트 단위로 계속 보내는 것입니다.
18:44 ~ 18:49 -  패럴렐은 8비트, 8비트 한꺼번에 보내는 것이고
18:49 ~ 18:53 -  시리얼 통신은 1비트씩 보내는 걸 시리얼 통신이라고 하죠.
18:53 ~ 19:00 -  그래서 그냥 제 생각에는 패러렐이 한 번에
19:00 ~ 19:05 -  8개를 보내고 얘는 1비트씩 보낸다. 얘는 8비트 얘는 1비트 그러면
19:05 ~ 19:11 -  얘가 더 빠르지 않을까 그렇게 생각을 하는데 요즘에 우리들이 쓰고 있는 거 있죠.
19:11 ~ 19:17 -  USB 이게 유니버셜 시리얼 버스거든요. 그러니까 USB도 그렇고요.
19:17 ~ 19:30 -  그다음에 시리얼 ATA라고 하는 거 여러분들 SATA라고 부르는데 SATA방식 하드디스크, 하드디스크 샀다라고 하면 SATA방식을 사가지고 꽂았다 이렇게 얘기를 하게 되죠
19:30 ~ 19:36 -  그래서 이제 그럴 때 그 사타 방식 이런 것들이 전부 다 시리얼 통신 방법을 사용하고 있다는 거죠
19:36 ~ 19:50 -  그래서 자세히는 모르겠는데 더 효율적이고 그 기술이 발전할수록 시리얼이 더 그 속도를 더 빠르게 할 수 있다 라고 하네요
19:50 ~ 19:54 -  자 아무튼 1900 한 대학교 2년, 3학년 그때쯤에
19:54 ~ 20:00 -  이런 식으로 시리얼 통신을 해서 숙제가 나오니까
20:00 ~ 20:06 -  숙제 해가지고 파일 전송하고 채팅하고 이런 프로그램 짰던 게 기억이 납니다
20:06 ~ 20:15 -  음 그 뒤에는요 어 집에서 집에서 통신하는 것은 모뎀 을 썼죠 뭐 ATDT
20:15 ~ 20:20 -  뭐 1410인가 뭐 해서 하이텔 연결하고 나운누리 유니텔
20:20 ~ 20:22 -  뭐 철단 이런 것들이 있었습니다.
20:22 ~ 20:25 -  그래서 집에 있는 전화선을 쓰는 거죠.
20:25 ~ 20:30 -  그래서 만약에 제가 전화선을 이걸 통신을 낮에 쓰고 있다라고 하면은
20:30 ~ 20:35 -  아무리 걸어도 안되는 거죠. 물론 끊는 방법도 있긴 있었습니다.
20:35 ~ 20:40 -  뭐 여러가지 그런게 있었는데 어쨌든 이런 것들을 써 가지고 그 당시에
20:40 ~ 20:45 -  채팅이라든지 아니면 소스코드를 개발하면 어디다 올려 가지고 공유하고
20:45 ~ 20:50 -  이제 이런 것들이 이루어져 가지고 통신들을 사용을 했었고요.
20:50 ~ 21:00 -  그 다음에는 대학원. 대학원에 가가지고 93년도에 대학원을 가서는 그 LAN이라고 하는 것이
21:00 ~ 21:09 -  네트워크죠 그래서 랜이 구축이 되어 있었습니다 그래서 예전에는 파일을 보낸다 라고 하면은 디스켓에다가 카피를 해가지고
21:09 ~ 21:19 -  그걸 주고 이렇게 했었는데 그러다 보면 디스켓이 뻥 나기도 하고 제출하고 갔는데 나중에 보니까 뭐 안되고 이러는 경우도 있었구요
21:19 ~ 21:22 -  그 다음에 이제 시리얼 통신 같은 걸 실제로 연결해 가지고
21:22 ~ 21:24 -  파일을 주고 받기도 했었는데 굉장히 불편하죠
21:24 ~ 21:27 -  야 나 보낼 테니까 너 그 프로그램 실행해라
21:27 ~ 21:30 -  그럼 거기다 이제 그쪽에서 실행하고 나도 실행해서
21:30 ~ 21:41 -  그래서 굉장히 불편했었는데 대학원에 들어가게 되면 대학원 연구실에 버스 방식으로 네트워크 카드를 메인보드에 꽂고요.
21:42 ~ 21:45 -  그 다음에 검은색 줄, 검은색 케이블이 있습니다.
21:45 ~ 21:49 -  검은색 케이블에 보면 거기에 T커넥터, T자처럼 생겼다고 해서
21:49 ~ 21:54 -  T자처럼 생긴 거에 양옆 이렇게 케이블이 연결돼 있고
21:54 ~ 21:57 -  이렇게 생긴 거 여기 밑에 있는 이 부분에다 네트워크 카드 여기 있죠
21:57 ~ 22:00 -  이거를 컴퓨터에 이제 꽂는 거예요 그래서 네트워크 카드에 꽂는 거예요
22:00 ~ 22:05 -  여기 선들을 이렇게 해서 한 선의 줄줄이 사탕으로 이렇게 쭉 연결돼 있는
22:05 ~ 22:10 -  컴퓨터들이 연결돼 있는 그런 버스 방식의 네트워크를 방식대로 사용을 했었죠.
22:10 ~ 22:15 -  그리고 맨 끝에다가는 터미네이터를 양쪽에 T커넥터가 이렇게 있다라고 하면
22:15 ~ 22:22 -  여기가 내가 맨 마지막 끝에 있는 컴퓨터다 그러면 여기다가 터미네이터를 꽂아가지고 사용을 하는
22:22 ~ 22:25 -  그래서 한 명이 신입생이 왔다 그러면은
22:25 ~ 22:30 -  신입생 받아라 그러면은 여기다가 제가 터미네이터를 풀어가지고 여기다가
22:30 ~ 22:37 -  연결해 가지고 새로운 컴퓨터에 있는 D-Connect 연결해 주고 그 다음에 옆에다가 제가 꽂았던 터미네이터를 그쪽에 꽂으면 되는
22:37 ~ 22:47 -  이런 식의 그런 방식들을 사용했습니다. 그래서 이렇게 잘 썼어요. 그래서 Samba 라고 하는 이런
22:47 ~ 22:52 -  시스템을 써 가지고 그냥 공유 폴더 같은 걸 만들어 놓고
22:52 ~ 22:56 -  거기다가 파일을 보낼 수 있게 되니까 굉장히 편한 거죠.
22:56 ~ 23:00 -  그래서 상당히 편하게 써져 있어요.
23:00 ~ 23:08 -  워크래프트라고 써 놨는데, 여러분들 스타크래프트 게임 아시나요? 그 전에 워크래프트 게임이 나왔거든요.
23:08 ~ 23:19 -  그래서 워크래프트 게임을 하기에 너무나도 좋은 환경이었죠. 그래서 LAN으로 네트워크 구축이 되어 있으니까 워크래프트를 열심히
23:19 ~ 23:30 -  밤새 가지고 연구하고 힘들 때 잠깐 게임을 하는 그런 환경이 아주 좋은 환경입니다.
23:30 ~ 23:36 -  구성이 되어 있었습니다. 자, 근데 이제 이런 거죠. 제가 랩장이었는데
23:36 ~ 23:43 -  저는 워크래프트 이런 걸 잘하진 못했었는데, 우리 연구실에 누가 이거 되게 잘해. 그러면 이제 그쪽 상대방 연구실에서 우리가 더 잘할걸?
23:43 ~ 24:00 -  그러면 그래, 한번 붙어. 이제 그러는 거죠. 그러면 우리가 그쪽 연구실로 가서 컴퓨터에서 하든지 아니면 그쪽 사람들이 와서 하고 이래야 되는데 아무래도 불편하게 되거든요.
24:00 ~ 24:05 -  그러니까 LAN하고 LAN을 연결하기 시작한 겁니다.
24:05 ~ 24:11 -  연구실이 떨어져 있으니까 위로 해서 천장을 해서 연구실하고 연구실을 연결하는 거예요.
24:11 ~ 24:17 -  Gateway 이런 것들, Repeater 이런 것들을 사용해서 연구실하고 연구실을 연결합니다.
24:17 ~ 24:22 -  그러니까 LAN하고 옆에 있는 연구실을 연결해서 쓰는거죠.
24:22 ~ 24:30 -  자료를 공유하기 위한건 아니고, 오로지 게임하기 위해서, 워크래프트 하기 위해서
24:30 ~ 24:35 -  뭐 어쨌든 다 연결하기 시작한 거예요 뭐 필요가 있었으니까 연결한 거죠 그래서
24:35 ~ 24:44 -  어 연구실 하고 연구실을 연결하게 되구요 그 다음에 학교 외부 하고는 모뎀으로 그러니까 학교끼리는 이제 전부 다
24:44 ~ 24:54 -  네트워크로 다 연결이 되었고 네트워크 하고 네트워크로 다 연결해 놨구요 학교 내부에서 그렇게 연결이 되는데 학교 외부는 학교에서 모뎀으로
24:54 ~ 24:57 -  바깥에 그렇게 연결하게 되는 거죠.
24:57 ~ 25:00 -  그때 속도가 아마 한 56Kbps
25:00 ~ 25:06 -  여기 b가 보면 여기 지금 이게 빛이 퍼세크죠. 그러니까 빛이죠. 빛이 소문자로 되어 있으면 빛입니다.
25:07 ~ 25:14 -  그래서 이게 만약에 요즘에는 이거를 간혹 가다가 다운로드 받을 때 이게 대문자 b가 이렇게 표시가 되는 경우가 있는데
25:14 ~ 25:20 -  대문자 b라고 하는 건 바이츠예요. 그러니까 여기 빛이라고 하는 건 8로 나눠줘야 된다는 거죠.
25:20 ~ 25:25 -  바이츠로 바꾸려면 굉장히 낮은 속도에 이런 걸 썼다는 거죠
25:25 ~ 25:30 -  그래도 슈퍼컴퓨터 같은데 계정 얻어내고
25:30 ~ 25:34 -  가지고 그런데 연결해서 쓰고 뭐 그렇게 썼었습니다
25:34 ~ 25:43 -  자 암튼 제가 느꼈었던 제가 실제로 경험했던 것은 이런식으로 흘러갔다 라는 거죠
25:43 ~ 25:49 -  자 그래서 인터넷이라고 하는 이제 단어가 나오게 되는데요
25:49 ~ 25:55 -  인터라고 하는 것 인터라고 하는 것은 뭐뭐간의 그런 뜻입니다
25:55 ~ 26:00 -  인터하고 넷을 나눠 본 거죠 그래서 넷이라고 하는 것은
26:01 ~ 26:05 -  인터라고 하는 건 뭐뭐 간이니까 네트워크 간에라는 뜻이 되겠죠.
26:06 ~ 26:13 -  예를 들면 인터네이셔널, 네이션이 국가니까 국가 간에, 국제적인 이런 뜻이 되는 거고요.
26:13 ~ 26:23 -  그 다음에 컨티넨트라고 하는 것이 대륙이니까 대륙간, 인터컨티넨틸, 발레스틱이 탄도, 그 다음에 미쓸이 미사일이니까 대륙간 인터컨티넨틀, 발레스틱이 탄도, 미쓸이 미사일이니까
26:23 ~ 26:30 -  대륙간 탄도미사일, ICBM이라고 이렇게 얘기를 하죠.
26:30 ~ 26:33 -  인터라고 하는 것은 뭐뭐 간에 그런 뜻인 거예요.
26:34 ~ 26:40 -  그래서 인터넷이라고 하는 것은 네트워크하고 네트워크를 연결한 거다라는 거죠.
26:42 ~ 26:45 -  인터넷, 인터넷 여러분들이 많이 들어보셨을 텐데
26:45 ~ 26:49 -  실제로 인터넷이라고 하는 것은 아까 제가 워크랩트 하려고
26:49 ~ 26:53 -  재밌게 사실은 여러분이 한번 그냥 피식 웃으시라고
26:53 ~ 26:56 -  게임하려고 연결했다고 말씀을 드리긴 했는데요.
26:57 ~ 27:00 -  어쨌든 그렇게 네트워크하고 네트워크를 연결하다 보니까
27:00 ~ 27:02 -  전 세계가 연결이 된 것
27:02 ~ 27:04 -  그거를 인터넷이라고 하더라
27:04 ~ 27:07 -  라고 여러분들이 생각하시면 되겠죠
27:07 ~ 27:09 -  자 그래서 이메일
27:09 ~ 27:12 -  인터넷으로 쓸 수 있는 것들은요
27:12 ~ 27:14 -  인터넷을 사용해 가지고 쓸 수 있는 것은
27:14 ~ 27:17 -  이메일이라든지 게임이라든지
27:17 ~ 27:19 -  그 다음에 월드와이드 웹
27:19 ~ 27:22 -  이런 것들을 인터넷을 통해서 쓸 수 있는 겁니다.
27:24 ~ 27:30 -  그래서 간혹 가다가 인터넷하고 월드와이드 웹하고 웹 이런 것들을
27:30 ~ 27:33 -  혼용해서 사용하는 경우가 있는데
27:33 ~ 27:36 -  엄밀히 얘기하자면 다르다는 거죠
27:36 ~ 27:39 -  인터넷이라고 하는
27:39 ~ 27:42 -  전세계가 연결된 게 인터넷인데
27:42 ~ 27:45 -  그거를 사용해서 그 위에서
27:45 ~ 27:48 -  월드와이드 웹을 사용할 수 있게 되는 거죠
27:48 ~ 27:52 -  자 그래서 일반적으로 혼동해서 사용합니다만 웹을 사용할 수 있게 되는 거죠. 자, 그래서 뭐 이런
27:52 ~ 27:55 -  뭐 근데 일반적으로는 그냥 혼동해서 사용합니다.
27:55 ~ 28:00 -  자, 그래서 이런 인터넷이 연결이 되더라도
28:00 ~ 28:06 -  보니까 전 세계가 연결이 되다 보니까 제가 몬스턴트 월드 뭐 이런거 하다보면
28:06 ~ 28:11 -  우리나라 사람 아닌 사람하고도 영어로 얘기해요 뭐 어떻게 뭐 하고 뭐
28:11 ~ 28:17 -  이러고 얘기하거든요 그러니까 이런 전세계 플레이어들하고 같이 게임할 수
28:17 ~ 28:23 -  있게 되는 거죠 그 다음에 몬스턴트월드도 하고 원신 이런 거 할 때도
28:23 ~ 28:27 -  전 세계에 있는 사람들하고 숨바꼭질하는 바람의 행방이라는 이벤트가 있는데
28:27 ~ 28:30 -  원신 자체도 원래 같이 할 수 있고요.
28:30 ~ 28:40 -  원시는 하다보면 자꾸 들어오려고 해요 내 월드로 그래서 처음에는 왜 그러나 그랬는데 도와주려고 들어오는 것 같더라구요
28:40 ~ 28:49 -  어쨌든 뭐 이런 것들이 그냥 막 들어올 수도 있는데 이 바람행방 이란 이벤트 굉장히 재미있어요 숨바꼭질 하는 건데다가
28:49 ~ 28:51 -  변해가지고 하는 건데
28:51 ~ 28:52 -  그런 것들이 있고요.
28:52 ~ 28:54 -  그 다음에 여러분들이 이런 건 별로 안 좋아하실 것 같고
28:54 ~ 28:58 -  여러분들이 좋아하시는 거는 뭐 LOL, 롤,
28:58 ~ 29:00 -  그 다음에 배틀그라운드 이런 것들이
29:00 ~ 29:03 -  저는 사실은 안해봐서 잘 모르겠어요.
29:03 ~ 29:07 -  근데 전세계 사람들하고 같이 게임할 수 있게 된거죠.
29:07 ~ 29:10 -  그것 때문에 인터넷이 있어서.
29:10 ~ 29:13 -  인터넷이 이런 것들 중에
29:13 ~ 29:18 -  어플리케이션, 인터넷을 사용하는 어플리케이션 중에
29:18 ~ 29:22 -  중요한 것이 게임이 있다는 것을 아시면 되겠고
29:22 ~ 29:27 -  그것처럼 게임처럼 인터넷을 사용하는 월드 와이드 앱이 있다는 거예요.
29:27 ~ 29:29 -  우리가 배울 것은 이거라는 거죠.
29:30 ~ 29:36 -  자 그래서 월드와이드 웹도 가장 많이 사용되는 것 중에 하나다
29:36 ~ 29:38 -  라고 알아두시면 되겠죠
29:38 ~ 29:42 -  자 그래서 월드와이드 웹이라고 하는 것을 설명하려고 하는데
29:42 ~ 29:45 -  웹이라고 하는 것이죠 웹. 웹이라고 하는 것은 망입니다 망
29:45 ~ 29:48 -  우리가 흔히 그냥 망 이렇게 번역하죠
29:48 ~ 29:51 -  웹이라고 하는 것은 거미줄망이나 그물망처럼
29:51 ~ 29:54 -  뭔가 이렇게 막 얽히고 설킨 것들이 있죠
29:54 ~ 29:57 -  뭐 이런 것들을 웹이라고 얘기를 하는데
29:57 ~ 30:00 -  여러분들 좀 오래된 것들
30:00 ~ 30:07 -  그 애니메이션 영화여 가지고 아실지 모르겠는데 샬롯 웹 이라고 하는게 있습니다 샬롯의 거미줄
30:07 ~ 30:13 -  그게 웹이라고 하는 것이 실제 이런 거미줄을 망을 얘기를 하고 있는 거다 라는 거구요
30:13 ~ 30:22 -  월드와이드다 라고 하는 것은 세계적이다 그런 뜻이죠 전 세계에 걸친 그런 뜻이죠 와이드는 넓다 넓이가 월드와이드다 전 세계에 걸친 그런 뜻이죠. wide는 넓다. 넓이가 world wide다.
30:22 ~ 30:25 -  전 세계처럼 넓은 것을 얘기하는 거죠.
30:25 ~ 30:27 -  그래서 nationwide라고 하는 것은
30:27 ~ 30:30 -  전국적인, 전 세계적인
30:30 ~ 30:41 -  그러니까 나라에서 유명한 플레이어, 전국에서 유명한 국가급의 플레이어
30:41 ~ 30:44 -  이렇게 얘기하는 것처럼 월드와이드다 라고 하는 것은
30:44 ~ 30:47 -  전 세계를 무대로 한다, 범위로 한다 라는 뜻이 되겠죠
30:47 ~ 30:51 -  그래서 월드와이드 웹이라고 하는 것은
30:51 ~ 30:58 -  전 세계 범위로 어디서든 접속할 수 있는 웹이다라는 것을 의미하는 거죠.
30:58 ~ 31:00 -  그래서 인터넷
31:00 ~ 31:07 -  월드와이드 웹을 엄격히 구별하지는 않고 흔히 혼용해서 사용하게 된다 라는 겁니다
31:07 ~ 31:18 -  근데 컴퓨터공학 전공 하시는 분이라면 조금 다르다고 했었는데 정도는 좀 기억을 해주시는게 어떨까 싶기도 한데
31:18 ~ 31:23 -  몰라서 상관없을 것 같구요 이런걸 설마 면접에서 물어보고 그러진 않을 것 같아요.
31:23 ~ 31:23 -  제 생각에는.
31:25 ~ 31:29 -  그 다음에 월드와이드 앱이라고 하는 것에 대한 역사를 보시고
31:30 ~ 31:45 -  1989년, 선이라고 하는 유럽 입자 물리연구소에서 효율적인 정보 공유를 목적으로 만들었다고 합니다.
31:45 ~ 31:54 -  그래서 1993년도 이후에 웹 브라우저들이 개발이 되면서 많이 폭발적으로 사용하게 됐다는 거죠
31:54 ~ 32:00 -  그래서 모자이크라든지 넷스케이프라든지 아니면 인터넷 익스플로러
32:00 ~ 32:07 -  사용이 되면서 나오게 되면서 많이 쓰게 됐다는 거죠
32:07 ~ 32:09 -  저 같은 경우도 처음에 모자이크도 써봤고요
32:09 ~ 32:13 -  그 다음에 네스케이프도 한동안 잘 썼었죠
32:13 ~ 32:16 -  물론 인터넷 그 뒤에 인터넷 익스플로러로
32:16 ~ 32:20 -  주로 대학원에서 이때 공부할 때이기 때문에
32:20 ~ 32:30 -  대학원에서 유닉스 기반으로 썼을 때는 모자이크나 네스케이브, 엑스윈도우 기반에 이런거 많이 썼었고 PC에서는 인터넷 익스플로러 많이 썼었죠.
32:30 ~ 32:33 -  우리가 강의에서 사용할 것은요.
32:33 ~ 32:36 -  엣지 웹브라우저를 사용하게 될 겁니다.
32:36 ~ 32:42 -  마이크로소프트 윈도우즈를 설치하게 되면
32:42 ~ 32:46 -  자동으로 엣지가 깔리게 되죠.
32:46 ~ 32:51 -  엣지 웹브라우저라고 하는 것은 크로미ium 엔진을 사용하게 되는데
32:51 ~ 33:00 -  Chrome하고 Google Chrome하고 동일한 엔진 기반으로 되어 있죠.
33:00 ~ 33:11 -  크롬을 썼었는데 크롬 쓰다가 보니까 인터넷 익스플로러는 정말 너무 안좋았죠. 그러다 보니까 크롬을 썼는데 크롬이 좀 많이 무거워졌죠.
33:11 ~ 33:18 -  후 서비스 이런 것 때문에 많이 무거워져 가지고 엣지가 오히려 좀 쓰기가 가볍고 좋다고 해가지고
33:18 ~ 33:24 -  엣지를 쓰다 보니까 뭐 거의 뭐 비슷한 것 같아요. 같은 엔진 기반이어서 그런지.
33:24 ~ 33:30 -  그래서 엣지를 많이 사용하고 있고 강의에서도 엣지를 사용할 엔진형입니다.
33:30 ~ 33:39 -  그 다음에는 이런 식으로 웹브라우저를 써 가지고 이런 월드와이드웹을 많이 사용하게 됐는데
33:39 ~ 33:46 -  그러다 보니까 월드와이드웹 컨소시엄이라고 하는 그래서 여기 www 우리가 따따따라고 부르죠
33:46 ~ 33:51 -  원래는 따블 따블 따따따 발음하기 편하니까 떳떳떳 그럼 이상하니까 따따따 발음하기 편하니까
33:51 ~ 33:53 -  떳떳떳 그럼 이상하니까
33:53 ~ 33:55 -  따따따가 편하긴 하니까 아니라 따따따라고 하는데
33:55 ~ 34:00 -  원래는 따블은 아니고 더블이겠죠.
34:00 ~ 34:05 -  그리고 이것도 W가 아니고 WV 아니에요? 자세히 보면.
34:05 ~ 34:07 -  옛날에 이걸 이렇게 동그랗게 썼었나요?
34:07 ~ 34:14 -  아무튼 W3C라고 하는 거. 그래서 WW가 되겠죠. 저도 자꾸 W라고 하는데.
34:14 ~ 34:23 -  자, 어쨌든 W, W3C라고 하는 거. 여기 W가 3개 있다. 그래서 W 3개짜�리 있고 그 다음에 컨소시엄 해가지고
34:23 ~ 34:30 -  이렇게 W3C 컨소시엄이라고 하는 곳에서 웹 표준을 개발했다라는 거예요.
34:30 ~ 34:36 -  그래서 HTML 표준화를 담당하는 컨소시엄이 W3C다 라는 겁니다.
34:36 ~ 34:39 -  그래서 여러분들이 간혹 들으시게 될 거에요.
34:39 ~ 34:46 -  컨소시엄이라고 하는 것은 직장 다니시고 이런 사회 경험이 있으신 분들은 많이 들어보셨을 거라고 생각이 되는데
34:46 ~ 35:00 -  예를 들면 어디 정부 과제가 떴는데 그거 수주하기 위해서 컨소시엄을 구성해서 들어간다 이런 식으로 표현을 하거든요. 그래서 컨소시엄이라고 하는 것은 공동 목표를 공동
35:00 ~ 35:01 -  목표로 하나가 있다고 하면
35:01 ~ 35:02 -  그걸 성취하기 위해 가지고
35:02 ~ 35:04 -  달성하기 위해 가지고
35:04 ~ 35:05 -  여러 조직이 그러니까
35:05 ~ 35:07 -  같은 목표를 갖고 있는 거죠.
35:07 ~ 35:08 -  그래서 같은 목표를
35:08 ~ 35:10 -  성취하기 위해 가지고
35:10 ~ 35:12 -  여러 조직들이 힘을 합쳐가지고
35:12 ~ 35:13 -  만든 연합체 같은 거를
35:13 ~ 35:15 -  컨소시엄이라고 그렇게 부르게 됩니다.
35:18 ~ 35:20 -  자 그래서 그런 W3C에서
35:20 ~ 35:23 -  만든 HTML이라고 하는
35:23 ~ 35:26 -  Hypertext Markup Language라고 하는
35:26 ~ 35:30 -  이런 HTML을 내놓게 되는데요
35:30 ~ 35:36 -  하나씩 뜯어서 보려고 하는 겁니다. 맨 앞에 하이퍼가 있죠. 하이퍼. 그래서 하이퍼라고 하는 것을 보면은요.
35:36 ~ 35:43 -  하이퍼, 슈퍼, 울트라 이런 것들은 전부 다 같은 뜻인데 뭔가 이렇게 뛰어나다는 뜻입니다. 그러니까 뭔가를 벗어나는 것.
35:53 ~ 35:56 -  정상범주를 벗어나가지고 우수한 것. 이런 것들을 슈퍼, 울트라, 하이퍼 이렇게 얘기를 하죠. 그래서 우리가 Superman이라고 얘기를 하면은 Superman은 일반 사람들보다 힘도 세고 막 그러죠.
35:56 ~ 36:00 -  그래서 영어로 발음할 때는 슈퍼 아니고 수퍼.
36:00 ~ 36:03 -  우리가 보통 슈퍼맨 이라고 쓰는데
36:03 ~ 36:06 -  수퍼발음이 맞겠죠
36:06 ~ 36:09 -  그 다음에 슈퍼마켓 이라고 하는 거
36:09 ~ 36:12 -  이것도 슈퍼마켓 이라고 읽는데
36:12 ~ 36:14 -  슈퍼마켓 이라고 읽어야 될 거고요
36:14 ~ 36:17 -  그 다음에 슈퍼마켓 그러면 걔네들이 좀
36:17 ~ 36:19 -  잘 모르는 경우도 있는 것 같더라고요
36:19 ~ 36:23 -  그러니까 그로서리 스토어 정도로 여러분들이 외국 나가서
36:23 ~ 36:26 -  우리가 그냥 동네에 있는 조그만 것들이 다 슈퍼마켓이라고 부르잖아요.
36:26 ~ 36:30 -  근데 슈퍼마켓이라고 하지 마시고 그냥 그로서리
36:30 ~ 36:37 -  스토어 어딨냐고 물어보시면 우리가 생각하는 그런 가게를 알려줄 거라고 생각이 됩니다
36:37 ~ 36:46 -  그 다음에 울트라맨 이라고 하는 거 이렇게 숟가락 두개 눈에 다 붙인 거 있죠 그 울트라맨 이라고 하는 거 이럴 때도 일반적인 사람들보다 뛰어나서
36:46 ~ 36:51 -  울트라맨 이라고 그렇게 얘기하고요 그 다음에 울트라바이올렛이라고 하는 거
36:51 ~ 36:53 -  UV라고 우리가 흔히 얘기하죠
36:53 ~ 36:56 -  그래서 그 빛의 스펙트럼 우리가 가시광선을 보면
36:56 ~ 37:00 -  눈에 보이는 광선들이 빨주노초파남보순
37:00 ~ 37:04 -  이게 파장이 제일 길고 이게 파장이 제일 짧은데
37:04 ~ 37:07 -  이거보다 이 파장보다 더 길면 눈에 안 보이고
37:07 ~ 37:11 -  우리 눈이 인식을 못하고 이 보라색보다도
37:11 ~ 37:14 -  더 짧으면 파장이 짧으면 우리가 또 인식을 못하죠
37:14 ~ 37:18 -  그래서 눈에 보이지 않는 가시광선의 범주를 벗어나는
37:18 ~ 37:21 -  보라색보다도 파장이 짧은 자외선, 요거 보라색 밖에 있다 라고
37:21 ~ 37:25 -  요거보다 더 뛰어나다, 뛰어나다기보다 이거 밖에 있다라는 의미로
37:25 ~ 37:30 -  Ultraviolet, 그래서 UV라고 그렇게 얘기합니다.
37:30 ~ 37:37 -  이 빨간 거에 이 바깥에 있는 것은 울트라레드라고 얘기하지는 않고요.
37:38 ~ 37:40 -  참고로 인프라레드라고 합니다.
37:41 ~ 37:45 -  인프라레드, 여기 안쪽에 따라서 인프라레드라고 얘기를 합니다.
37:45 ~ 37:47 -  그래서 IR이라고 얘기하죠.
37:48 ~ 37:51 -  그 다음에 하이퍼� 다음에 Hyperplane이라고 하는 거.
37:51 ~ 37:54 -  머신러닝 같은 거 여러분들 공부할 때 들어보셨나요?
37:54 ~ 37:57 -  Hyperplane. Hyperplane이라고 하는 것을
37:57 ~ 38:00 -  심의 plane이라고 하는 것이
38:00 ~ 38:07 -  평면을 얘기하는 거죠. 그래서 일반적인 평면이라고 하는 거 우리가 3차원 공간에서
38:07 ~ 38:18 -  2차원 평면을 보통 이렇게 생각을 하게 되는데, 예를 들면 100차원이 있다. 그러면 99차원 짜리 평면이 있게 되는
38:18 ~ 38:23 -  이런 것들을 얘기하는 거죠. 그래서 공간을 어떤 n 차원상에서
38:23 ~ 38:25 -  공간이 있다고 했을 때
38:25 ~ 38:28 -  걔를 반으로 나눌 수 있는 거 이런 거죠.
38:28 ~ 38:29 -  예를 들면 클래시피케이션 같은 거
38:30 ~ 38:35 -  할 때 어떤 선을 이렇게 딱 그어 가지고 이 위로는
38:35 ~ 38:44 -  예를 들면 고양이고 이 밑으로는 강아지고 이렇게 하는데 이게 뭐 두 가지 요소만 가지고 결정이 되는 것이 아니고
38:44 ~ 38:53 -  이 공간 자체가 n 차원이 될 수 있겠죠. 차원이 막 숫자가 2차원, 3차원, 4차원, 5차원, 6차원, 7차원 해가지고
38:53 ~ 38:56 -  뭐 1000차원 이렇게 될 수도 있겠죠
38:56 ~ 39:00 -  그러다 보니까 그거를 뭔가 나누기 위해서는
39:00 ~ 39:06 -  우리가 생각하는 3차원 공간에서 2차원 평면 가지고는 안되니까
39:06 ~ 39:12 -  일반적인 의미로 이렇게 초평면이라고 하는 하이퍼 플레인이라고 하는 것을 사용하게 되는데
39:12 ~ 39:15 -  그때도 하이퍼라는 것을 쓴다는 거죠
39:15 ~ 39:23 -  그래서 그런 하이퍼 텍스트라고 하는 것은 텍스트보다 뛰어난 능력을 가진 것을 하이퍼텍스트라고 얘기하게 되는 겁니다.
39:24 ~ 39:27 -  정확한 비유는 아니지만 이런 예제도 많이 드는데요.
39:27 ~ 39:29 -  보통 사람들이 설명할 때, 하이퍼텍스트 설명할 때
39:30 ~ 39:37 -  그냥 텍스트는 메모장, 하이퍼텍스트는 hwp, 물론 똑같은 정확한 의미는 아닙니다.
39:38 ~ 39:41 -  그런데 일반적인 메모장에서 할 수 있는 것하고
39:41 ~ 39:45 -  hwp나 아니면 워드 같은 것 또는 파워포인트 같은
39:45 ~ 39:50 -  이런 것을 썼을 때 할 수 있는 표현 능력이나 이런 것들이 확연히 차이가 나겠죠.
39:51 ~ 39:56 -  그래서 하이퍼텍스트라고 하는 것은 이미지라든지 다른 문서의 링크
39:56 ~ 40:00 -  이런 것들을 그 다음에 폰트라든지 이런 걸 표현할
40:00 ~ 40:07 -  가지고 포함해서 표현할 수 있는 그래서 더 뛰어난 일반 텍스트에서 하지 못하는 것을 할 수 있다는 의미로
40:07 ~ 40:16 -  하이퍼 텍스트 라고 그렇게 얘기를 한다 라는 거죠 자 그 다음에 이제 마커 이라고 하는 게 있는데 이건 뭔가 마킹 한다는
40:16 ~ 40:23 -  얘기인데요 어 원래 내용의 뭔가를 추가하는 게 아닙니다 그래서 우리가 이 문제 정말 중요해 하고 별표 땡냐 뭐 이런거 있죠?
40:23 ~ 40:30 -  그래서 중요하다고 별표를 그리거나 아니면 이거는 내가 좀 기억하고 싶은데
40:30 ~ 40:35 -  중요한 문장 같은 거 형광펜으로 칠해 놓는 거 이런 것들이 마킹을 한다라고 얘기를 하게 되는 거죠
40:35 ~ 40:42 -  빨간펜 선생님 같은 거 빨간펜으로 수정, 요건 이렇게 바꿔야 돼 라고 쓴다든지
40:42 ~ 40:46 -  뭐 이런 것들이 전부 다 마킹 마크업이 된다라고 보시면 되겠고요
40:46 ~ 40:50 -  그래서 language라고 하는 거 나머지 하나 여기까지 설명이 됐고
40:50 ~ 40:51 -  language라고 하는 건 언어죠.
40:51 ~ 41:00 -  언어는 내 머릿속에 있는 개념, 지금 제가 HTTP에 대해서 설명을 강의를 하고 있는데, 웹 프로그래밍에 대해서
41:00 ~ 41:02 -  강의를 하고 있는데 제가 머릿속에 있는 거
41:02 ~ 41:04 -  이거를 여러분들 머릿속에 넣기 위해 가지고
41:04 ~ 41:08 -  전달하기 위해 가지고 지금 언어를 사용을 해 가지고
41:08 ~ 41:12 -  한국어를 사용을 해 가지고 이런 얘기를 하고 있는 거죠
41:12 ~ 41:18 -  그래서 앞장을 종합을 해보면
41:18 ~ 41:30 -  HTML이라고 하는 것은 텍스트보다 풍부한 내용을 표현할 수 있으면서 원래의 내용에 추가해 가지고 부가적인 정보를 마케팅시켜서
41:30 ~ 41:35 -  해 줄 수 있는 그런 언어다 라고 보시면 되겠죠
41:35 ~ 41:43 -  자 지금은 우리가 어 매일매일 html 쓰고 있죠 뭐 하루라도 html을
41:43 ~ 41:47 -  안 쓰는 날이 있을까요 여러분들 뭐 웹브라우저 안 쓰는 날이 하루라도
41:47 ~ 41:54 -  있으세요 거의 없을 것 같은데요 그래서 매일매일 우리가 사용을 하고 있는데요.
41:54 ~ 42:00 -  1989년도의 상황을, 이게 나왔던 1989년도의 상황을 보면요.
42:00 ~ 42:08 -  일반 텍스트보다는 뭔가 풍부한 내용을 포함해 가지고 정보 전달을 좀 효율적으로 할 수 있는 방법이 필요했겠죠
42:08 ~ 42:14 -  근데 그때 나와 있던 방법이 gml 이라고 하는게 있었는데요 1960년이니까 굉장히 오래됐죠
42:14 ~ 42:24 -  그래서 Generalized Markup Language 라고 하는 것이 있었는데 이거를 표준화 해해 가지고 sgml이라고 하는 것을 만들었어요.
42:24 ~ 42:30 -  표준화해서. 근데 이것도 너무 방대하고 복잡해 가지고, 이거를 제대로
42:30 ~ 42:34 -  보여줄 수 있는 그런 뭐 브라우저 라든지 이런게 없는 상황인 거죠 그래서
42:34 ~ 42:41 -  개발된 게 이런 html 을 개발을 했고 이게 아주 그냥 대박이 난 거죠
42:41 ~ 42:48 -  자 그래서 sgml 이라고 하는게 너무 복잡했기 때문에 어 이거를 만든 게 html
42:48 ~ 42:52 -  이거를 좀 간략해서 만든 것이 필요한 부분만 띄어갖고 만든 게 HTML이고요.
42:52 ~ 42:57 -  SGML 자체를 뭔가 좀 단순화하고 싶었던 노력이 있었습니다.
42:57 ~ 43:00 -  그래서 이건 참고로라고 붙여놨는데요.
43:00 ~ 43:07 -  html 에 대한 얘기는 아닙니다. 이거는 sgm 을 좀 단순하면서도
43:07 ~ 43:18 -  머신 리더블, 그러니까 기계가 읽을 수 있구요. 동시에 사람도 읽을 수 있게 휴먼 리더블하게 w3c 에서 만든 것이 xml 이라고 하는 것이 있습니다.
43:18 ~ 43:23 -  Extensible Markup Language. 우리는 여기 Hypothetxt Markup Language 인데
43:23 ~ 43:26 -  그 Hypothetxt 대신에 Extensible 이라고 하는 것이 들어갔죠.
43:26 ~ 43:30 -  확장 가능한 그런 뜻이 들어갔습니다. 그래서
43:30 ~ 43:39 -  어 이 태그 라고 하는 것들이 나오게 되는데 그 태그들을 사용자가 정의할 수 있도록 한거다 라고 보시면 되겠습니다
43:39 ~ 43:49 -  자 우리 강의에서는 벗어나는 거구요 그래서 이 xml 이라고 하는게 요즘에 사용되는 것은 주로 그 레이아 구성할 때 유저인터페이스 레이아 구성할 때
43:49 ~ 43:56 -  많이 사용이 되고 처음에 만들어졌을 때는 인터넷에서 데이터 주고받을 때도 많이 사용이 됐었는데
43:56 ~ 44:00 -  요즘에는 제이슨한테 좀 그 자리를 물려준 것 같아요.
44:01 ~ 44:06 -  HTML은 데이터하고 눈에 보이는 것을 같이 다 포함하고 있는데
44:07 ~ 44:10 -  XML은 눈에 보이는 것이 다 빠져 있어요.
44:11 ~ 44:16 -  그냥 실제로 데이터하고 구조만 들어가 있는 것이라고 보시면 되겠습니다.
44:18 ~ 44:20 -  네트워크 동작 구조.
44:22 ~ 44:30 -  네트워크 과목에서 아마 TCPIP라든지 ISO의 7 레이어 이런 것들 여러분들 자세하게 배우실 겁니다.
44:30 ~ 44:31 -  넘어가도록 하고요.
44:32 ~ 44:34 -  모르셔도 상관이 없습니다. 강의를 들으시는 데는.
44:35 ~ 44:38 -  다만 프로토콜이라고 아까 말씀드렸던 거 있죠?
44:38 ~ 44:42 -  그래서 통신을 위해서 서로 정해놓은 약속이나 규약을
44:42 ~ 44:46 -  프로토콜이라고 한다. 이 단어에는 조금 익숙해지실 필요는 있습니다.
44:47 ~ 44:49 -  어렵게 생각하실 필요 없고요.
44:49 ~ 44:59 -  전화할 때 여보세요 하면은 여보세요. 김과장님 저 신이사입니다. 지금 통화 가능하신가요? 아예 말씀하시죠. 지난번 협약식 때는 감사했습니다.
45:00 ~ 45:04 -  이렇게 뭔가 여보세요 하면 저쪽에서도 여보세요 하고
45:04 ~ 45:07 -  누구세요 하면 여기서 누굽니다 이렇게 얘기하고
45:07 ~ 45:10 -  이런 어떤 규약 같은 것이 있죠
45:10 ~ 45:12 -  이런 것들을 얘기를 하고 있는 거죠
45:12 ~ 45:16 -  그래서 이게 통신 패킷으로 정의한다는 거죠
45:16 ~ 45:19 -  이거는 제가 그냥 웃자고 적어놓은 건데
45:19 ~ 45:21 -  요즘에는 어떤가요?
45:21 ~ 45:26 -  전화번호 딱 하면은 뜨죠 아예 거기에 누군지
45:26 ~ 45:27 -  어떤 사람 이름이 뜨죠
45:27 ~ 45:30 -  누군지 알고 받는 거죠
45:30 ~ 45:34 -  고기 참치 안 드시는 신이사님 잘 지내시죠?
45:34 ~ 45:40 -  제가 실제로 이렇게 고기 참치 안 드시는 누구누구 이렇게 써 놓은 분이 있거든요.
45:40 ~ 45:44 -  그러면 전화를 딱 받으면 그 분 옆에 고기 참치 안 드시면 이게 떠요.
45:44 ~ 45:47 -  그러면 이렇게 얘기하죠.
45:47 ~ 45:51 -  그러면 이분이 저는 하도 그러셔서 참치는 먹기로 했어요.
45:51 ~ 45:54 -  이런 거 하시면서 웃으면서 그렇게 얘기하고
45:54 ~ 46:00 -  요즘에는 이 프로토콜도 변했다는 거죠.
46:00 ~ 46:09 -  전화할 때 우짜고 제가 쓴 거구요 실제로는 그 통신 패킷을 정의를 해가지고 패킷이라고 하는 것은 데이터를 주고받을 때 어떻게
46:09 ~ 46:17 -  인코딩을 할 거냐 이런 것들을 얘기하는 건데 그 패킷을 정의해 가지고 서로 어 이 약속에 따라서
46:17 ~ 46:22 -  어 데이터를 주고받는 거라고 보시면 되겠죠 프로토콜 이라고 보시면 되겠고
46:22 ~ 46:30 -  월드와이드 웹에서는 그 http 프로토콜을 사용하고 있습니다
46:30 ~ 46:34 -  그래서 클라이언트 하고 서버 라는 개념이 나오게 되는데요
46:34 ~ 46:42 -  클라이언트는 서버에 먼저 요청을 하게 됩니다. 요청 request 라고 하는 단어가 중요합니다. 요청을 하는게 중요합니다
46:42 ~ 46:53 -  이때 사용자가 얼굴 앞에 있는 눈앞에 있는 클라이언트를 통해 가지고 네트워크를 사용하게 되죠
46:54 ~ 47:00 -  자 그래서 이렇게 사용자 앞에 있다고 해서 프론트엔드 사용자 쪽에 앞쪽에 제일 끝에
47:00 ~ 47:05 -  앞에, 앞쪽 제일 끝, 그러니까 사용자하고 제일 가깝게 붙어있다라고 해서
47:05 ~ 47:09 -  프론트엔드라고 그렇게 얘기를 하게 되고요.
47:09 ~ 47:13 -  그 다음에 서버는 클라이언트 요청에 대한 처리를 수행하고
47:13 ~ 47:20 -  결과를, 리스펀스를 반환하게 되는 거죠. 응답을 반환하게 되는 거죠.
47:20 ~ 47:20 -  그래서 서버라고 하는 것은 사용자 입장에서 보면은 네트워크 건너편을 응답을 반환하게 되는 거죠.
47:24 ~ 47:26 -  그래서 서버라고 하는 것은 사용자 입장에서 보면 네트워크 건너편에 있는 거죠.
47:26 ~ 47:30 -  근데 우리가 이제 앞으로 할 때도
47:30 ~ 47:31 -  실습이나 이런 걸 할 때도
47:31 ~ 47:36 -  기본적으로는 클라이언트하고 서버의 역할이 분리되어 있기는 하지만
47:36 ~ 47:39 -  한 컴퓨터에 있을 수도 있다
47:39 ~ 47:42 -  한 컴퓨터에서 한 컴퓨터가 클라이언트 역할도 하고
47:42 ~ 47:45 -  서버 역할도 할 수 있다는 것도
47:45 ~ 47:48 -  기본적으로 알아두시면 좋을 것 같긴 합니다
47:48 ~ 47:51 -  요청하고 응답을 말씀드리려고 전화로 커피 주문을 기본적으로 알아두시면 좋을 것 같긴 합니다.
47:53 ~ 47:55 -  요청하고 응답을 말씀드리려고 전화로 커피 주문하는 거
47:55 ~ 47:57 -  이 그림을 계속 쓸 거예요.
47:57 ~ 47:59 -  그래서 커피 주문을 위해서 전화번호를
48:00 ~ 48:09 -  확인을 하고요. 전화를 걸죠. 그래서 커피를 아이스 아메리카노 커피 한잔 주시는데요. 샷 추가 해주세요 라고 커피를 주문하게 됩니다.
48:10 ~ 48:18 -  그러면은 서버 서비스를 제공하는 서버에서는 받아가지고 알겠습니다 하고 커피를 제조를 한 다음에
48:18 ~ 48:22 -  에스프레소 두 잔을 내려가지고 샷 추가하니까요. 얼음하고 제조한 다음에 에스프레소 2잔을 내려가지고
48:22 ~ 48:25 -  차 추가하니까요. 얼음하고 물 추가한 다음에
48:25 ~ 48:27 -  아이스 아메리카노를 제조하고
48:27 ~ 48:30 -  그거를 요청받은 주소로 커피를 배달하면 됩니다.
48:30 ~ 48:39 -  끝나겠죠 그래서 클라이언트 그러니까 고객 소비자 여기는 서버 제공하는 사람 이렇게 되겠죠
48:39 ~ 48:46 -  자 이거를 이제 이렇게 바꾸면요 클라이언트 하고 서버 일반적인 얘기입니다 그래서 클라이언트가
48:46 ~ 48:52 -  여기도 os 가 있을 거고 os 가 있을 거고 os OS에서 동작하는 프로세스들이 이렇게 있겠죠.
48:52 ~ 48:57 -  얘를 이제 클라이언트 프로세스, 얘를 서버 프로세스라고 보시게 되면은
48:57 ~ 49:00 -  클라이언트가 서버 주소하고 포트,
49:00 ~ 49:06 -  어려운 내용인데 아무튼 뭔가 이런 서버 주소하고 포트가 필요하다고 생각을 하시고요
49:06 ~ 49:16 -  네트워크 프로토콜을 통해서 서버에 요청을 하게 됩니다 아까 여기서 이렇게 커피 주문 하듯이 마찬가지로 여기서 리퀘스트 하게 된다는 얘기죠
49:16 ~ 49:29 -  그래서 그때는 리뷰 게시판에다가 뭐 데이터를 추가해 달라 뭐 이런 요청을 할 수 있겠죠. 그러면 이 서버에서는 요청을 받아서 뭔가 처리를 해주겠죠. 그래서 데이터를 리뷰하고요.
49:30 ~ 49:36 -  리뷰 게시판에 추가하고요. 그 다음에 그게 성공인지 실패인지 응답에 저장을 한 다음에
49:36 ~ 49:46 -  이거를 응답을 이렇게 클라이언트로 다시 리스펀스를 전달해 주는 이런 과정을 거치게 되는 것이 이거랑 똑같겠죠.
49:46 ~ 49:54 -  그래서 이런 통신을 위해서 데이터를 주고받기 위한 패킷을 정해야 된다 아까 패킷 얘기 했었죠? 그래서 패킷을 정의하게 됩니다
49:54 ~ 50:00 -  이걸 잘 보시고 이거를 이렇게 그림을 계속 쓰고 있죠
50:00 ~ 50:05 -  웹서버 간의 통신에 대해서 말씀을 드리고 있는 건데요.
50:05 ~ 50:09 -  요청이라고 하는 거. 여기서는 윈도우즈를 썼네요.
50:09 ~ 50:12 -  아까는 그냥 클라이언트 OS 했었는데
50:12 ~ 50:16 -  여기서는 윈도우즈. 예를 드는 거니까요. 윈도우즈라고 했네요.
50:16 ~ 50:20 -  윈도우즈에서만 된다는 얘기는 아니고요. 맥OS 이런 것도 되겠죠.
50:20 ~ 50:22 -  그 다음에 참고로 만약에 이게 여러분들이 윈도우하고 S서만 된다는 얘기는 아니고요 맥 OS 이런 것도 되겠죠 그 다음에 참고로 만약에 이게
50:22 ~ 50:25 -  여러분들이 윈도우하고 S가 없을 때랑요
50:25 ~ 50:28 -  윈도우즈가 있을 때랑이 다른 의미입니다
50:28 ~ 50:30 -  윈도우라고 하는 건 창이라는
50:30 ~ 50:35 -  일반 명사가 되는 거구요 윈도우즈가 되면 마이크로소프트에서 만든 운영체제 있죠
50:35 ~ 50:44 -  그게 되는 겁니다 고유명사가 되는 겁니다 자 그래서 사용자가 웹브라우저 이제 아까 여기서는 클라이언트 프로세스 라고
50:44 ~ 50:53 -  했었는데 여기서는 웹브라우저라고 지정을 했네요 예를 들면 엣지 같은거 사파리 같은걸 얘기하는 겁니다 그래서 사용자가 웹브라우저 주소창에 서버 주소하고 포트를,
50:53 ~ 50:55 -  또 포트가 나왔네요.
50:55 ~ 51:00 -  포트를 입력, 중요한 거는 주소입니다.
51:00 ~ 51:05 -  를 입력해 가지고 서버에 리퀘스트 를 보내는 거죠 그런 다음에 여기에서
51:05 ~ 51:13 -  add.js 파일을 어 그 실행을 해주고 이거를 요청을 하고 실행해 달라고
51:13 ~ 51:18 -  요청을 하고 그 다음에 추가할 데이터를 지정을 하는 거죠 자 그러면은 서버
51:18 ~ 51:30 -  에서는 아 그래 그러면은 add.js 파일을 실행하고 실행된 결과를 add.js 파일을 실행할 때는 여기서 넘겨준 추가할 데이터를
51:30 ~ 51:37 -  추가하라는 것 같으니까요 이걸 가지고 추가해 주겠죠 그렇게 하고 나서 그 실행된 결과를 html 로
51:37 ~ 51:48 -  어 우리 지금 그 왜 풀어 보자 니까요 html 로 인코딩을 해가지고 어이 거를 요청받은 주소로 응답을 전송한다
51:48 ~ 51:51 -  라고 되어 있네요 자 그러니까 여기에 요 앞에 있는
51:51 ~ 51:55 -  요거랑요 더 앞에 가보면 이거랑 커피 주문하고 커피 제조하고 커피
51:55 ~ 52:00 -  배달하는 거랑 그 다음에 리퀘스트 받아서 프로세스하고 리스판스 주는 거
52:00 ~ 52:04 -  전부 다 같은 구조를 갖고 있다는 거죠.
52:04 ~ 52:08 -  자 그래서 이 앞부분을 사용자가 여기 있을 테니깐요.
52:08 ~ 52:12 -  사용자가 이걸 쓰겠죠. 그래서 이 부분을 프론트엔드라고 하고
52:12 ~ 52:15 -  이렇게 멀리 떨어져 있는 부분을 백엔드라고 한다.
52:15 ~ 52:20 -  라고 보시면 되겠죠. 여기 뭐 DVD 있고 그러겠죠. 실제로는.
52:20 ~ 52:24 -  자 그래서 이거를 개발하는 거, 이걸 개발하는 사람을
52:24 ~ 52:27 -  프론트엔드 개발자라고 부르고요.
52:27 ~ 52:30 -  이 부분을 개발하는 사람은
52:30 ~ 52:35 -  개발자를 백엔드 개발자라고 부릅니다.
52:35 ~ 52:40 -  그리고 이거 이거 난 다 해. 이거 이거 다 하겠다.
52:40 ~ 52:45 -  다 한다. 나 할 줄 알아. 그런 사람을 풀스택 개발자라고 얘기하게 되는 거죠.
52:45 ~ 52:50 -  그래서 풀스택 개발자라고 하는 사람은 프론트엔드하고 백엔드를
52:50 ~ 52:52 -  모두 개발하는 사람이라고 보시면 되겠죠.
52:54 ~ 52:59 -  실제로는 개발한다는 게 컴퓨터공학과 학생들에 한해서 말씀드리는 건데요.
53:00 ~ 53:05 -  컴퓨터공학과 학생들이 되어야 되는 것은 사실은 아키텍트가 되어야 되겠죠.
53:05 ~ 53:07 -  설계하는 사람이 되어야 됩니다.
53:07 ~ 53:14 -  실제 코딩하는 거, 이걸 코딩하고 프로그래밍하고 이런 프로그래밍하는 걸 좀 낮춰서 우리가 코딩이라고 그렇게 부르는데
53:14 ~ 53:17 -  그런 거 그냥 코더들이 하면 되겠죠.
53:18 ~ 53:21 -  그래서 실제 설계하는 게 굉장히 중요하기 때문에
53:21 ~ 53:24 -  풀스택 개발자라고 되어 있지만
53:24 ~ 53:30 -  실제로는 이 전체를 설계할 수 있는 능력을 갖추는 그런 기능이 있습니다.
53:30 ~ 53:35 -  것들이 굉장히 필요하게 될 거라고 생각이 됩니다. 컴퓨터공학 전공자에 한해서요.
53:35 ~ 53:44 -  그냥 그게 아니고 여러분들이 컴퓨터공학 전공자가 아니다 라고 했을 때는 그냥 각각 이 프로그램, 이거 뭐 보통 이제 전체를 다 하지 않고
53:44 ~ 53:50 -  뭐 요거 요거 이제 별도로 이렇게 따로 나눠서 하구요. 뭐 하다보면 전체를 다 해야 될 수도 있으니까
53:50 ~ 53:52 -  어 풀스텍 개발자가 되기도 하겠지만요. 아무튼 그렇게 나눠서 하고요. 하다보면 전체를 다 해야 될 수도 있으니까 풀스택 개발자가 되기도 하겠지만요.
53:52 ~ 53:56 -  아무튼 그렇게 나눠지고 다 합친 것을
53:56 ~ 54:00 -  풀스택 개발자라고 한다는 단어를 알아주도록 하시고요.
54:00 ~ 54:09 -  자 그 다음에 아까 제가 포트 라고 얘기를 했었는데 음 포트는 어떤 컴퓨터에서 뭔가 통신을 하기 위해 가지고
54:09 ~ 54:18 -  어 여러 개의 그런 포트 번호를 가지고 있습니다 그래서 다 쓰는 건 아니구요 몇 개를 쓰는데 그중에서 80
54:18 ~ 54:23 -  포트 라고 하는 것은 웰론 포트 그러니까 잘 알려진 포트 라고 해가지고
54:23 ~ 54:30 -  어 1024 밑이었나 512 뭐 밑이었나 아무튼 그 밑에 있는 번호들은 지정이
54:30 ~ 54:37 -  무슨 서비스를 하기 위해서 쓴다 라고 하는 것이 지정이 되어 있고 그 위로는 필요에 의해서 쓰거나 아니면은
54:37 ~ 54:46 -  프로그래머가 그거를 개발자가 그거를 포트를 고정을 해가지고 뭐 어떨 때는 플랫폼 마다 그게 고정되어 있을 때도 있습니다. 물론 변경할 수 있지만요.
54:46 ~ 54:55 -  자 그래서 그런 포트라고 하는 개념이 있다라는 거예요. 그래서 서�근할 때 내가 80번으로 80번 포트로 접근을 했냐
54:55 ~ 55:00 -  아니면 21번 포트로 접근을 했냐에 따라서
55:00 ~ 55:05 -  서버가 달라진다 라는 것 같은 그 서버 라도 이 포트에 따라서 서비스가 바뀔
55:05 ~ 55:09 -  수 있다는거 알아 두시면 좋을 것 같습니다
55:10 ~ 55:13 -  자 그 다음에 하이퍼 텍스트 트랜스포 프로토콜 이라고 하는거 세대에서
55:13 ~ 55:18 -  보려고 하는데요 어이 www 그러니까 w3
55:18 ~ 55:22 -  줘 그러니까 월드와이드 웹 통신 규약.
55:23 ~ 55:25 -  이게 그 HTTP가 된다는 거죠.
55:25 ~ 55:30 -  그래서 이 HTTP는 월드와이드 웹 통신 규약이고
55:30 ~ 55:35 -  주로 HTML 문서를 통신하기 위한 규약이다 라고 보시면 되겠죠.
55:35 ~ 55:38 -  그래서 그걸 통신하는 게 아까처럼 앞에서 본 것처럼
55:38 ~ 55:42 -  request하고 response가 되는 거죠.
55:42 ~ 55:45 -  그 다음에 원하는 자원의 주소를 지정하기 위해서
55:45 ~ 55:49 -  URL이라고 하는 것을 사용하게 됩니다.
55:49 ~ 55:53 -  그래서 우리가 뭘 어떤 아까 여기서 이런 거 있었죠.
55:53 ~ 55:57 -  여기에 앞에 가보시면 여기서 뭔가를 서버 주소
55:57 ~ 56:00 -  해서 여기서 뭔가를 우리가 원하는 거를 이걸
56:00 ~ 56:07 -  지정을 해야 될 거 아니에요. 이렇게 지정을 할 때 쓰는 방법이 url 이다 라는 거죠.
56:07 ~ 56:14 -  자 근데 url 이 여기 있는 거고요. 간혹 가다가 이렇게 uri 라고 하는 것을 쓰기도 합니다.
56:14 ~ 56:24 -  uri 라고 하는 것은 유니폼 리소스 아이덴티파이어의 id죠. 그런데 이 ID를 표현하는 방법이 두 가지가 있다고 보시면 되겠습니다.
56:24 ~ 56:30 -  네임하고 로케이터, 로케이터는 로케이션이 위치죠.
56:30 ~ 56:34 -  그러니까 어디에 위치하는지를 지정하기 위한 표기법이라고 보시면 되겠죠.
56:34 ~ 56:40 -  이것 말고도 name이 있고요. 그래서 이것을 합쳐서 URI라고 하는 것이 있다는 것.
56:40 ~ 56:48 -  그래서 URI라고 하는 것. 그러니까 URL은 URI죠. 이게 더 위의 개념이니까. 여기 두 개가 있으니까요.
56:48 ~ 57:00 -  그래서 아무튼 URL이라고 우리가 URL을 사용하는데 다른 프로그래밍 같은거 하시다 보면은 url 인데 분명히 url 을 지정하는데 class 는 uri
57:00 ~ 57:03 -  클래스를 쓰는 경우가 여러분들이 보시게 될 겁니다.
57:03 ~ 57:09 -  그래서 그 URI라고 하는 것이 URI는 URL, URN을 다 포함하고 있으니까
57:09 ~ 57:13 -  여기서는 URI를 쓰는구나. 여러분들 그렇게 생각하시면 되겠죠.
57:13 ~ 57:17 -  자, 이게 주소창에 쓰는 건데 URL인데요.
57:17 ~ 57:22 -  URL에 보시면 앞에 이렇게 어떤 프로토콜을 쓸지 프로토콜이 나오고요.
57:22 ~ 57:25 -  그 다음에 colon, slash, slash를 씁니다.
57:25 ~ 57:27 -  이거 반드시 두 개, slash 두 개 있어야 되겠죠.
57:28 ~ 57:29 -  자, 그러다 보면 이거는 잘 쓰지는 않는데
57:30 ~ 57:32 -  이렇게 유저 인포메이션을 쓰는 경우도 있습니다.
57:32 ~ 57:34 -  그래서 홍길동이죠.
57:35 ~ 57:40 -  gd홍 하고 패스워드 이렇게 쓰면 다 보이니까 이렇게 잘 쓰지는 않는데
57:40 ~ 57:44 -  그냥 gd홍 이 부분 콜론하고 패스워드 부분을 제외하고
57:44 ~ 57:48 -  addmark 이렇게 쓰게 되면 패스워드를 물어보는 경우가 많이 있습니다.
57:50 ~ 57:52 -  뭐 이런 식으로 쓰기도 하고요. 근데 이렇게 패스워드를 물어보는 경우가 많이 있습니다. 뭐 이런 식으로 쓰기도 하고요.
57:52 ~ 57:56 -  패스워드를 이렇게 보이게 쓰면 안 좋겠죠 당연히.
57:56 ~ 58:00 -  아무튼 이렇게 아이디하고 패스워드를 지정할 수도 있고요.
58:00 ~ 58:06 -  이런건 잘 쓰지 않겠죠 그죠 자 그 다음에는 요 부분 우리가 흔히 보는거
58:06 ~ 58:12 -  www. 어쩌구저쩌구.com에서 호스트를 지정을 하고 그 다음에 아까 말씀드렸던
58:12 ~ 58:18 -  포트 아까는 80이 기본이라고 했는데 8080 포트를 여기서 지정을 했네요 그래서
58:18 ~ 58:22 -  이때는 콜론을 쓰게 된다. 그래서 for2를 이렇게 지정을 한 다음에
58:22 ~ 58:25 -  그 다음에는 그 슬래시로 나오게 되는데
58:25 ~ 58:30 -  이 슬래시 나오는 것이 path, 그러니까 경로라고 하는 거죠.
58:30 ~ 58:33 -  우리가 접근해야 될 경로를 얘기해 준다 라고 보시면 되겠고요
58:33 ~ 58:35 -  그 다음에 여기에 물음표 뒤에 나오는 것들
58:35 ~ 58:39 -  그 다음에 이게 이렇게 퀴리라고 부르는데
58:39 ~ 58:43 -  퀴리가 여러 개가 있다고 했을 때는 이렇게 AND로 연결하는 거죠
58:43 ~ 58:48 -  지금 보니까 MAX하고 SINCE 두 개가 있는 거죠
58:48 ~ 58:50 -  이런 식으로 AND로 연결을 하고
58:50 ~ 58:52 -  퀴리하고 연결할결할 때는 Pass하고 연결해서는
58:52 ~ 58:55 -  물음표를 쓴다 라는거 알아두시면 되겠구요
58:55 ~ 59:00 -  그 다음에 HTTP secure라고 해서
59:00 ~ 59:09 -  HTTPS 해가지고 보안을 강화하기 위해서 인증하고 암호화 된거를 그런 프로토콜을 요즘에 많이 사용하고 있죠
59:09 ~ 59:19 -  자 그 다음에 리퀘스트 하고 리스펀스 내용인데요 아까 그 그림에서 보면은 리퀘스트는 클라이언트에서 서버로
59:19 ~ 59:24 -  넘겨줄 때 쓰는 거 그 다음에 리스펀스는 서버에서 클라이언트로 넘겨줄 때 쓰는 거죠.
59:24 ~ 59:30 -  그래서 HTTP 통신을 위해서 주고받는 패킷은 텍스트 메시지로 구성된다
59:30 ~ 59:38 -  하는 거죠 일반적으로 우리가 뭐 tcp 쪽에서 쓰는 패킷 들은 바이너리 로 되어 있는 거가 많은데 여기서는 그냥 우리가 눈으로 볼 수 있는
59:38 ~ 59:47 -  그런 텍스트 메세지로 구성이 된다는 겁니다 그 다음에 보실 때 어떤 빈 공백 줄이 있다라고 하면은 아무것도 아닌 것 같아 보이지만
59:47 ~ 59:51 -  이게 굉장히 중요한 귀하기 다 라는 것을 주의하라고 했는데
59:51 ~ 59:54 -  예를 들면 이런 거예요. 여기 지금 한 줄에 비어 있죠.
59:54 ~ 60:00 -  어? 이게 뭐 이렇게 비어 있죠? 이 부분을 지우면 이 규약에 벗어나게 된다는 거죠.
60:00 ~ 60:06 -  빈 줄도 굉장히 중요한 역할을 한다 라는 것을 주의하셔야 된다 라는 거구요
60:06 ~ 60:10 -  우리가 직접 헤더를 바꿀 일이 없을 테니까 크게 중요하지는 않지만
60:10 ~ 60:15 -  아무튼 알고 계시는 것이 좋을 것 같습니다
60:15 ~ 60:18 -  간혹가다 헤더를 건드리는 경우 있을 수 있으니까요
60:18 ~ 60:21 -  자 그 다음에 이제 request 하고 response로스트 하고 리스펜스 로 나누게 되는데요
60:21 ~ 60:30 -  리퀘스트 나중에 이제 다 잘 그 내용이 다 나오게 될 건데 어 겟 메소드 라는거 리퀘스트 할 때는 겟 메소드
60:30 ~ 60:37 -  라는거 하고 포스트 메소드를 많이 씁니다 이거 말고도 많이 있거든요 근데 일반적으로 우리가 쓰는거 쓰게 될 것은 겟 메소드 하고
60:37 ~ 60:44 -  포스트 메소드 난 생활하게 될 거에요 그래서 겟 메소드 라고 하는건 이게 주소탕 주소 창이다 그러면은
60:44 ~ 60:51 -  그 주소 창에다가 url 이렇게 쭉 쓰게 되죠 그래서 거기에 이런식으로 퀼이나 이런 것들이 다 포함되어 가지고
60:51 ~ 61:00 -  주소창에서 바로 보이게 된다 라는 것을 좀 주의하시면 되겠죠 근데 포스트 메소드 라고 하는 것은 이렇게
61:00 ~ 61:09 -  주소창에 바로 다 보이지 않아요 이런 커리들이 그러니까 어 그렇다고 완전히 보안 측면에서 완벽한 야는 그렇진 않은데
61:09 ~ 61:16 -  어쨌든 그 이 메세지를 보면 다 보이니까요 근데 바로 이렇게 주소창에는 보이지 않는다
61:16 ~ 61:24 -  폴 포스트 메세지 든요 그래서 어 리퀘스트의 바디를 가지고 있고 이런 식으로 이 바디를 가지고 있죠 그래서 바�에 body를 가지고 있고 이런 식으로 body를 가지고 있죠. 그래서 body를 가지고 있고 거기에
61:24 ~ 61:30 -  query를 이렇게 포함하는 형태로 쓸 수 있다라는 거야. 이 부분 우리가 굳이 찾아보지
61:30 ~ 61:33 -  보기는 힘든 거라고 보시면 되겠죠.
61:33 ~ 61:37 -  간략화된, 굉장히 간략화시켜서 나타낸 겁니다.
61:37 ~ 61:42 -  그래서 이런 식으로 게시나 포스트 방법으로 서버에 요청을 하게 되고요.
61:42 ~ 61:48 -  서버에서 응답하는 거는 리스펀스는 200, 숫자가 있어요.
61:48 ~ 61:53 -  100번, 200번 떼서 숫자가 쫙 나열되어 있는데 많이 쓰는 거, 우리가 보게 될 거.
61:53 ~ 61:58 -  200은 성공했다는 얘기고요. 정말 많이 보셨죠? 404 Not Found.
62:00 ~ 62:08 -  400번 때 오류는 뭔가 클라이언트가 잘못한 경우입니다. 없는 걸 달라고 했을 때 404나 파운드가 나오는거 많이 보셨을 거에요
62:08 ~ 62:17 -  자 그 다음에 우리가 실제로 이제 서버를 만들게 되면은 음 우리가 내는 오류들 서버를 만들다가 내는 오류들 그럴 때 500번
62:17 ~ 62:22 -  인터널 서버 에러가 수시로 발생하게 될 겁니다.
62:22 ~ 62:24 -  너무 좌절하지 않으셔야 되겠죠.
62:24 ~ 62:25 -  그래서 고치면 되니까요.
62:25 ~ 62:30 -  그래서 500번 때 우리는 서버가 잘못한 거다.
62:30 ~ 62:35 -  404나 파운드 정도 200번 오케이 뭐 이 정도만 하셔도 되지 않을까 싶기도 하고요
62:35 ~ 62:38 -  그 다음에 갯포스트는 반드시 하셔야 될 것 같구요
62:38 ~ 62:43 -  자 그래서 장시간 말씀을 드렸었는데
62:43 ~ 62:49 -  인터넷이라고 하는 것은 네트워크하고 네트워크를 연결한 거였었다
62:49 ~ 63:00 -  그래서 네트워크하고 네트워크를 연결하다 보니까 전세계가 연결되어 버린게 인터넷이고 인터넷을 사용하는게 굉장히 많은데 그 중에서 html 관련
63:00 ~ 63:09 -  월드와이드 웹이다. 그래서 이 월드와이드 웹은 인터넷이나 웹하고 혼용해서 사용한다는 거죠.
63:09 ~ 63:16 -  자, 그 다음에 HTML이라고 하는 것은 일반 텍스트로 표현할 수 있는 것보다 다양한 정보들을 표현하는 게 가능하고요.
63:16 ~ 63:23 -  프로토콜이라고 하는 이 단어를 여러분들이 아셔야 되는데, 네트워크를 통해서 데이터를 주고받는 통신을 위해서 정해놓은 규약이다
63:23 ~ 63:30 -  그래서 이 규약을 벗어나면 이걸 따르지 않으면 통신이 불가능하다는 거
63:30 ~ 63:33 -  중요하다. 이걸 따라주는 게 굉장히 중요하다는 거 알아두시도록 하시고요.
63:34 ~ 63:36 -  그 다음에 HTTP라고 하는 거.
63:36 ~ 63:39 -  이거는 HTML을 주고받을 때 쓰는 그런 프로토콜인데
63:39 ~ 63:42 -  리퀘스트하고 리스판스가 있다.
63:42 ~ 63:45 -  라는 정도로 간략히 알아두시면 되겠습니다.
63:45 ~ 63:46 -  자, 고생 많으셨습니다.
64:00 ~ 64:00 -  you
